<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="RoleAuthorityMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="RoleAuthority" type="AS.GroupOn.Domain.Spi.RoleAuthority,AS.GroupOn" />
		<typeAlias alias="RoleAuthorityFilter" type="AS.GroupOn.DataAccess.Filters.RoleAuthorityFilter,AS.GroupOn" />
	</alias>
	<cacheModels>
		<cacheModel id="c" implementation="MEMORY" readOnly="true">
			<flushInterval  seconds="3" />
			<flushOnExecute statement="insert"/>
			<flushOnExecute statement="update"/>
			<flushOnExecute statement="delete"/>
			<property name="CacheSize" value="10000" />
		</cacheModel>
	</cacheModels>
	<statements>
		<insert id="insert" parameterClass="RoleAuthority" >
      INSERT INTO [RoleAuthority]
      (RoleID,AuthorityID)
      values
      (#RoleID#,#AuthorityID#)
      <selectKey type="post" resultClass="System.Int32" property="ID">
				select @@identity as value
			</selectKey>
		</insert>
		<update id="update" parameterClass="RoleAuthority">
      update [RoleAuthority] set
      RoleID=#RoleID#,AuthorityID=#AuthorityID#
      where ID=#ID#
    </update>
		<delete id="delete" parameterClass="System.Int32">
      delete from [RoleAuthority] where ID=#ID#
    </delete>
    <delete id="delbyroleid" parameterClass="System.Int32">
      delete from [RoleAuthority] where RoleID=#RoleID#
    </delete>
		<sql id="selectsql">
      select * from [RoleAuthority]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="RoleID">
          RoleID=#RoleID#
        </isNotNull>
        <isNotNull prepend="and" property="AuthorityID">
          AuthorityID=#AuthorityID#
        </isNotNull>
      </dynamic>
    </sql>
		<select id="getbyid" parameterClass="System.Int32" resultClass="RoleAuthority" cacheModel="c">

      select AuthorityName from Authority where ID in(select AuthorityID  from RoleAuthority where RoleID=#RoleID#)

      <!--<include refid="selectsql" />
			where ID=#ID#-->
		</select>
		<select id="gettop1byfilter" parameterClass="RoleAuthorityFilter" resultClass="RoleAuthority" cacheModel="c">
      select top 1
      * from [RoleAuthority]
      <include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
    
		<select id="getbyfilter" parameterClass="RoleAuthorityFilter" resultClass="RoleAuthority" cacheModel="c">
			select
			<isNotNull property="Top">
				top $Top$
			</isNotNull>
      AuthorityID from [RoleAuthority]
      <include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
      <!--select AuthorityName from Authority where ID in(
      select AuthorityID from RoleAuthority where RoleID=#RoleID#)-->

    </select>
		<select id="getcount" parameterClass="RoleAuthorityFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [RoleAuthority]
      <include refid="wheresql" />
		</select>
		<select id="getbypage" resultClass="RoleAuthority" parameterClass="RoleAuthorityFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [RoleAuthority]
      <include refid="wheresql" />
			)
			SELECT *
			FROM datatable
			WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
		</select>
	</statements>
</sqlMap>