<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="FlowMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Flow" type="AS.GroupOn.Domain.Spi.Flow,AS.GroupOn" />
    <typeAlias alias="FlowFilter" type="AS.GroupOn.DataAccess.Filters.FlowFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Flow" >
      insert into [Flow]
      (User_id,Admin_id,Detail_id,Detail,Direction,Money,Action,Create_time)
      values
      (#User_id#,#Admin_id#,#Detail_id#,#Detail#,#Direction#,#Money#,#Action#,#Create_time#)
      <selectKey type="post" resultClass="System.Int32" property="Id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Flow">
      update [Flow] set
      User_id=#User_id#,Admin_id=#Admin_id#,Detail_id=#Detail_id#,Detail=#Detail#,Direction=#Direction#,Money=#Money#,Action=#Action#,Create_time=#Create_time#
      where Id=#Id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Flow] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Flow]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">

        <isNotNull prepend="and" property="Id">
          Id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="User_id">
          User_id=#User_id#
        </isNotNull>
        <isNotNull prepend="and" property="Direction">
          Direction=#Direction#
        </isNotNull>
        <isNotNull prepend="and" property="Action">
          Action=#Action#
        </isNotNull>
        <isNotNull prepend="and" property="Admin_id">
          Admin_id=#Admin_id#
        </isNotNull>
        <isNotNull prepend="and" property="Detail_id">
          Detail_id=#Detail_id#
        </isNotNull>
        
        <isNotNull prepend="and" property="FromCreateTime">
          <![CDATA[
          Create_time>=#FromCreateTime#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToCreateTime">
          <![CDATA[
          Create_time<=#ToCreateTime#
          ]]>
        </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Flow" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="FlowFilter" resultClass="Flow" cacheModel="c">
      select top 1
      * from [Flow]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="FlowFilter" resultClass="Flow" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Flow]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="FlowFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Flow]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Flow" parameterClass="FlowFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Flow]
      
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>