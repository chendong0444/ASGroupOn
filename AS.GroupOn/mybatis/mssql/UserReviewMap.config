<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="UserReviewMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="UserReview" type="AS.GroupOn.Domain.Spi.UserReview,AS.GroupOn" />
    <typeAlias alias="UserReviewFilter" type="AS.GroupOn.DataAccess.Filters.UserReviewFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="UserReview" >
      insert into [userreview]
      (user_id,team_id,create_time,comment,score,rebate_time,rebate_price,state,admin_id, isgo,partner_id,type)
      values
      (#user_id#,#team_id#,#create_time#,#comment#,#score#,#rebate_time#,#rebate_price#,#state#,#admin_id#,#isgo#,#partner_id#,#type#)
      <selectKey type="post" resultClass="System.Int32" property="id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="UserReview">
      update [userreview] set
      user_id=#user_id#,team_id=#team_id#,create_time=#create_time#,comment=#comment#,score=#score#,rebate_time=#rebate_time#,rebate_price=#rebate_price#,state=#state#,admin_id=#admin_id#,isgo=#isgo#,partner_id=#partner_id#,type=#type#
      where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [userreview] where id=#id#
    </delete>
    <sql id="selectsql">
      select * from [userreview]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id">
          id=#id#
        </isNotNull>
        <isNotNull prepend="and" property="admin_id">
          admin_id=#admin_id#
        </isNotNull>

        <isNotNull prepend="and" property="partner_id">
          partner_id=#partner_id#
        </isNotNull>
        <isNotNull prepend="and" property="pidisnull">
         ( partner_id=#pidisnull# or partner_id is null)
        </isNotNull>
        <isNotNull prepend="and" property="team_id">
          team_id=#team_id#
        </isNotNull>
        <isNotNull prepend="and" property="user_id">
          user_id=#user_id#
        </isNotNull>
        <isNotNull prepend="and" property="state">
          state=#state#
        </isNotNull>
        <isNotNull prepend="and" property="type">
          type=#type#
        </isNotNull>
        <isNotNull prepend="and" property="unstate">
          state!=#unstate#
        </isNotNull>
        <isNotNull prepend="and" property="untype" >
          id not in (select id from userreview where type=#untype#)
        </isNotNull>
		  <isNotNull prepend="and" property="teamcata" >
			  team_id  in (select id from Team where  teamcata = #teamcata#)
		  </isNotNull>
        <isNotNull prepend="and" property="FromCreate_time">
          <![CDATA[
          create_time>=#FromCreate_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToCreate_time">
          <![CDATA[
          create_time<=#ToCreate_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="wheresql">
          $wheresql$
        </isNotNull>
	  </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="UserReview" cacheModel="c">
      <include refid="selectsql" />
      where id=#id#
    </select>

    <select id="gettop1id" parameterClass="UserReviewFilter" resultClass="System.Int32" cacheModel="c">
      select top 1 id from [userreview]
      <include refid="wheresql"/>
    </select>

    <select id="gettop1byfilter" parameterClass="UserReviewFilter" resultClass="UserReview" cacheModel="c">
      select top 1
      * from [userreview]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="UserReviewFilter" resultClass="UserReview" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [userreview]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="UserReviewFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [userreview]
      <include refid="wheresql"/>
    </select>
    <select id="getbypage" resultClass="UserReview" parameterClass="UserReviewFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [userreview]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
	  <select id="getbycontent" parameterClass="UserReviewFilter" resultClass="UserReview" cacheModel="c">
      select team.Id as review_teamid,username, Title,Image,comment,t1.create_time,t1.totalamount from

      (select userreview.Id,userreview.state, user_id,team_id,username,userreview.create_time,comment,totalamount  from userreview left join [User] on  userreview.user_id=[User].Id)t1
      left join team on t1.team_id=team.Id


      <dynamic prepend="where">
			  <isNotNull prepend="and" property="TState">
				  t1.state!=#TState#
			  </isNotNull>
			  <isNotNull prepend="and" property="TState2">
				  t1.state=#TState2#
			  </isNotNull>
			  <isNotEmpty property="SortOrderString">
				  order by $SortOrderString$
			  </isNotEmpty>

		  </dynamic>

	  </select>

    <select id="getcount3" parameterClass="UserReviewFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from (Userreview left join team on team.id = Userreview.Team_id left join [User] on [user].id = Userreview.[user_id])
       <include refid="wheresql"/>
    </select>
    <select id="getbypage3" resultClass="UserReview" parameterClass="UserReviewFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT Userreview.team_id,Userreview.[user_id],Userreview.comment,Userreview.create_time,
      Userreview.score,Userreview.isgo,Team.Title,[User].email,[User].Username,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM (Userreview left join team on team.id = Userreview.Team_id left join [User] on [user].id = Userreview.[user_id])
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
    
  </statements>
</sqlMap>