<?xml version="1.0" encoding="utf-8" ?>
<!--退款-->
<sqlMap namespace="RefundsMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Refunds" type="AS.GroupOn.Domain.Spi.Refunds,AS.GroupOn" />
        <typeAlias alias="RefundsFilter" type="AS.GroupOn.DataAccess.Filters.RefundsFilter,AS.GroupOn" />
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>
    <statements>
        <insert id="insert" parameterClass="Refunds" >
          insert into [Refunds]
          (State,Create_Time,PartnerViewTime,Order_ID,Money,PartnerID,FinanceBeginTime,FinanceEndTime,RefundMeans,Reason,Result,CreateUserID,AdminID)
          values
          (#State#,#Create_Time#,#PartnerViewTime#,#Order_ID#,#Money#,#PartnerID#,#FinanceBeginTime#,#FinanceEndTime#,#RefundMeans#,#Reason#,#Result#,#CreateUserID#,#AdminID#)
          <selectKey type="post" resultClass="System.Int32" property="Id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Refunds">
          update [Refunds] set
          State=#State#,Create_Time=#Create_Time#,PartnerViewTime=#PartnerViewTime#,Order_ID=#Order_ID#,Money=#Money#,PartnerID=#PartnerID#,FinanceBeginTime=#FinanceBeginTime#,FinanceEndTime=#FinanceEndTime#,RefundMeans=#RefundMeans#,Reason=#Reason#,Result=#Result#,CreateUserID=#CreateUserID#,AdminID=#AdminID#
          where Id=#Id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [Refunds] where Id=#value#
        </delete>
        <sql id="selectsql">
            select * from [Refunds]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
				<isNotNull prepend="and" property="Id">
					Id=#Id#  
				</isNotNull>
                <isNotNull prepend="and" property="Order_Id">
                  Order_ID=#Order_Id#
                </isNotNull>
				<isNotNull prepend="and" property="inorder_id">
					order_id in (select Id from [order] where City_id=#inorder_id#)
				</isNotNull>
                <isNotNull prepend="and" property="State">
                    State=#State#   
                </isNotNull>
                <isNotNull prepend="and" property="PartnerID">
					PartnerID=#PartnerID#
				</isNotNull>
                <isNotNull prepend="and" property="AdminID">
					AdminID=#AdminID#
				</isNotNull>
                <isNotNull prepend="and" property="FromCreate_time">
                    <![CDATA[
                    Create_Time>=#FromCreate_time#
                    ]]>
                </isNotNull>
                <isNotNull prepend="and" property="ToCreate_time">
                    <![CDATA[
                    Create_Time<=#ToCreate_time#
                    ]]>
                </isNotNull>
            </dynamic>
        </sql>

      <select id="selectbypartid" parameterClass="RefundsFilter" resultClass="System.Int32" cacheModel="c">
		  select count(*) FROM refunds where state=1 and PartnerID=#PartnerID#

	  </select>
      
        <select id="getbyid" parameterClass="System.Int32" resultClass="Refunds" cacheModel="c">
            <include refid="selectsql" />
            where Id=#value#
        </select>
        <select id="gettop1byfilter" parameterClass="RefundsFilter" resultClass="Refunds" cacheModel="c">
            select top 1
            * from [Refunds]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getbyfilter" parameterClass="RefundsFilter" resultClass="Refunds" cacheModel="c">
            select
            <isNotNull property="Top">
                top $Top$
            </isNotNull>
            * from [Refunds]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getcount" parameterClass="RefundsFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [Refunds]
            <include refid="wheresql" />
        </select>
        <select id="getbypage" resultClass="Refunds" parameterClass="RefundsFilter" cacheModel="c">
            WITH datatable AS
            (
            SELECT *,
            ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
            FROM [Refunds]
            <include refid="wheresql" />
            )
            SELECT *
            FROM datatable
            WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
        </select>
    </statements>
</sqlMap>