<?xml version="1.0" encoding="utf-8" ?>
<!--积分消费记录-->
<sqlMap namespace="ScorelogMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Scorelog" type="AS.GroupOn.Domain.Spi.Scorelog,AS.GroupOn" />
        <typeAlias alias="ScorelogFilter" type="AS.GroupOn.DataAccess.Filters.ScorelogFilter,AS.GroupOn" />
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>
    <statements>
        <insert id="insert" parameterClass="Scorelog" >
          insert into [scorelog]
          (score,action,[key],create_time,adminid,user_id)
          values
          (#score#,#action#,#key#,#create_time#,#adminid#,#user_id#)
          <selectKey type="post" resultClass="System.Int32" property="id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Scorelog">
            update [scorelog] set
            score=#score#,action=#action#,[key]=#key#,create_time=#create_time#,adminid=#adminid#,user_id=#user_id#
            where id=#id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [scorelog] where id=#value#
        </delete>
        <sql id="selectsql">
            select * from [scorelog]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
                <isNotNull prepend="and" property="Score">
                    score=#Score#  <!--积分值 正为收入 负为花费-->
                </isNotNull>
                <isNotNull prepend="and" property="Action">
                    action=#Action#  <!--行为：'下单','退单','积分兑换','取消兑换','签到' -->
                </isNotNull>
                <isNotNull prepend="and" property="Key">
                    [key]=#Key#  <!--关联ID (订单ID)-->
                </isNotNull>
                <isNotNull prepend="and" property="User_id">
                    user_id=#User_id#  <!--对应的用户ID-->
                </isNotNull>
                <isNotNull prepend="and" property="FromCreate_time">
                    <![CDATA[
                    create_time>=#FromCreate_time#
                    ]]><!--生成时间-->
                </isNotNull>
                <isNotNull prepend="and" property="ToCreate_time">
                    <![CDATA[
                    create_time<=#ToCreate_time#
                    ]]>
                </isNotNull>

            </dynamic>
        </sql>
        <select id="getbyid" parameterClass="System.Int32" resultClass="Scorelog" cacheModel="c">
            <include refid="selectsql" />
            where id=#value#
        </select>
        <select id="gettop1byfilter" parameterClass="ScorelogFilter" resultClass="Scorelog" cacheModel="c">
            select top 1
            * from [scorelog]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getbyfilter" parameterClass="ScorelogFilter" resultClass="Scorelog" cacheModel="c">
            select
            <isNotNull property="Top">
                top $Top$
            </isNotNull>
            * from [scorelog]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getcount" parameterClass="ScorelogFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [scorelog]
            <include refid="wheresql" />
        </select>
        <select id="getbypage" resultClass="Scorelog" parameterClass="ScorelogFilter" cacheModel="c">
            WITH datatable AS
            (
            SELECT *,
            ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
            FROM [scorelog]
            <include refid="wheresql" />
            )
            SELECT *
            FROM datatable
            WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
        </select>
    </statements>
</sqlMap>