<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="CatalogsMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Catalogs" type="AS.GroupOn.Domain.Spi.Catalogs,AS.GroupOn" />
    <typeAlias alias="CatalogsFilter" type="AS.GroupOn.DataAccess.Filters.CatalogsFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Catalogs" >
		insert into [Catalogs]
		(catalogname,sort_order,parent_id,ids,keyword,keytop,visibility,catahost,cityid,image,url,type,location,image1,url1)
		values
		(#catalogname#,#sort_order#,#parent_id#,#ids#,#keyword#,#keytop#,#visibility#,#catahost#,#cityid#,#image#,#url#,#type#,#location#,#image1#,#url1#)
		<selectKey type="post" resultClass="System.Int32" property="id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Catalogs">
		update [Catalogs] set
		catalogname=#catalogname#,sort_order=#sort_order#,parent_id=#parent_id#,ids=#ids#,keyword=#keyword#,keytop=#keytop#,visibility=#visibility#,catahost=#catahost#,cityid=#cityid#,image=#image#,url=#url#,type=#type#,location=#location#,image1=#image1#,url1=#url1#
		where id=#id#
	</update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Catalogs] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Catalogs]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id">
          id=#id#
        </isNotNull>
        <isNotNull prepend="and" property="parent_id">
          parent_id=#parent_id#
        </isNotNull>
        <isNotNull prepend="and" property="ids">
          ids in(#ids#)
        </isNotNull>
        <isNotNull prepend="and" property="visibility">
          visibility=#visibility#
        </isNotNull>
        <isNotNull prepend="and" property="catahost">
          catahost=#catahost#
        </isNotNull>
        <isNotNull prepend="and" property="cityid">
          cityid=#cityid#
        </isNotNull>
        <isNotNull prepend="and" property="type">
          type=#type#
        </isNotNull>
        <isNotNull prepend="and" property="Location">
          location=#Location#
        </isNotNull>
        <isNotNull prepend="and" property="catalogname">
          catalogname=#catalogname#
        </isNotNull>
        <isNotNull prepend="and" property="catalognameLike">
          catalogname like '%'+#catalognameLike#+'%'
        </isNotNull>
        <isNotNull prepend="and" property="keywordLike">
          keyword like '%'+#keywordLike#+'%'
        </isNotNull>
        <isNotNull prepend="and" property="LocationOr">
            (location=#LocationOr# or location=0)
        </isNotNull>
        <isNotNull prepend="and" property="cityidLikeOr">
          (','+cityid+',' like '%,$cityidLikeOr$,%'or ','+cityid+',' like '%,0,%')
        </isNotNull>
        
        <isNotNull prepend="and" property="parent_idNotZero">
            parent_id!=0
        </isNotNull>
        <isNotEmpty prepend="and" property="Where">
            $Where$
        </isNotEmpty>
        
      </dynamic>
    </sql>


    <select id="getdetail" parameterClass="CatalogsFilter" resultClass="Catalogs" cacheModel="c">
      select *,0 as number from catalogs
       <include refid="wheresql" />
    </select>
    
    <select id="getbyid" parameterClass="System.Int32" resultClass="Catalogs" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="CatalogsFilter" resultClass="Catalogs" cacheModel="c">
      select top 1
      * from [Catalogs]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="CatalogsFilter" resultClass="Catalogs" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Catalogs]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="CatalogsFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Catalogs]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Catalogs" parameterClass="CatalogsFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Catalogs]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>