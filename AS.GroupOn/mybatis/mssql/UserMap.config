<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="UserMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="User" type="AS.GroupOn.Domain.Spi.User,AS.GroupOn" />
    <typeAlias alias="UserFilter" type="AS.GroupOn.DataAccess.Filters.UserFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
        
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="User" >
      insert into [User]
      (Email,Username,Realname,Password,Avatar,
      Gender,Newbie,Mobile,Qq,msn,Money,Score,
      Zipcode,Address,City_id,Enable,Manager,IsManBranch,Secret,
      Recode,Sns,IP,Login_time,Create_time,auth,
      IP_Address,fromdomain,userscore,totalamount,
      ucsyc,yizhantong,Signmobile,Sign_time)
      values
      (#Email#,#Username#,#Realname#,#Password#,#Avatar#,
      #Gender#,#Newbie#,#Mobile#,#Qq#,#msn#,#Money#,#Score#,
      #Zipcode#,#Address#,#City_id#,#Enable#,#Manager#,#IsManBranch#,#Secret#,
      #Recode#,#Sns#,#IP#,#Login_time#,#Create_time#,#auth#,
      #IP_Address#,#fromdomain#,#userscore#,#totalamount#,
      #ucsyc#,#yizhantong#,#Signmobile#,#Sign_time#)
      <selectKey type="post" resultClass="System.Int32" property="Id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="User">
      update [User] set
      Email=#Email#,Username=#Username#,Realname=#Realname#,Password=#Password#,Avatar=#Avatar#,
      Gender=#Gender#,Newbie=#Newbie#,Mobile=#Mobile#,Qq=#Qq#,msn=#msn#,Money=#Money#,Score=#Score#,
      Zipcode=#Zipcode#,Address=#Address#,City_id=#City_id#,Enable=#Enable#,Manager=#Manager#,IsManBranch=#IsManBranch#,Secret=#Secret#,
      Recode=#Recode#,Sns=#Sns#,IP=#IP#,Login_time=#Login_time#,Create_time=#Create_time#,auth=#auth#,
      IP_Address=#IP_Address#,fromdomain=#fromdomain#,userscore=#userscore#,totalamount=#totalamount#,
      ucsyc=#ucsyc#,yizhantong=#yizhantong#,Signmobile=#Signmobile#,Sign_time=#Sign_time#
      where Id=#Id#
    </update>
    <update id="updateusere" parameterClass="User">
      update [User] set
      Email=#Email#,Username=#Username#,Realname=#Realname#,Password=#Password#,Avatar=#Avatar#,
      Gender=#Gender#,Newbie=#Newbie#,Mobile=#Mobile#,Qq=#Qq#,msn=#msn#,Money=#Money#,Score=#Score#,
      Zipcode=#Zipcode#,Address=#Address#,City_id=#City_id#,Enable=#Enable#,Manager=#Manager#,Secret=#Secret#,
      Recode=#Recode#,Sns=#Sns#,IP=#IP#,auth=#auth#,IP_Address=#IP_Address#,fromdomain=#fromdomain#,userscore=#userscore#,
      totalamount=#totalamount#,
      ucsyc=#ucsyc#,yizhantong=#yizhantong#,Signmobile=#Signmobile#
      where Id=#Id#
    </update>
      
    <update id="updateuserinfo" parameterClass="User">
      update [User] set
      Email=#Email#,Username=#Username#,Realname=#Realname#,Password=#Password#,
      Mobile=#Mobile#,Qq=#Qq#,Zipcode=#Zipcode#,Address=#Address#,Enable=#Enable#,Manager=#Manager#,Secret=#Secret#
      where Id=#Id#
    </update>

    <update id="updatepassword" parameterClass="User">
      update [User] set
      Password=#Password#
      where Id=#Id#
    </update>

    <update id="updatesecret" parameterClass="User">
      update [User] set
      Secret=#Secret#
      where Id=#Id#
    </update>

    <update id="updatenewbie" parameterClass="User">
      update [User] set
      Newbie=#Newbie#
      where Id=#Id#
    </update>

    <update id="updateEnable" parameterClass="User">
      update [User] set
      Enable=#Enable#
      where Id=#Id#
    </update>

    <update id="updateuserscore" parameterClass="User">
      update [User] set
      userscore=#userscore#
      where Id=#Id#
    </update>
    
    <update id="updatemoney" parameterClass="User">
      update [User] set Money=#Money#
      where Id=#Id#
    </update>

    <update id="updateUcsyc" parameterClass="User">
      update [User] set ucsyc=#ucsyc#
      where Id=#Id#
    </update>

    <update id="updateIptime" parameterClass="User">
      update [User] set IP=#IP#,Login_time=#Login_time#
      where Id=#Id#
    </update>

    <update id="updatebuy" parameterClass="User">
      update [User] set
      Realname=#Realname#,Mobile=#Mobile#,Address=#Address#,Zipcode=#Zipcode#,
      where Id=#Id#
    </update>
    
    
    <update id="updatemoneys" parameterClass="User">
      update [User] set
      userscore=#userscore#,Money=#Money#,totalamount=#totalamount#
      where Id=#Id#
    </update>
    
    <update id="updateauth" parameterClass="User">
      update [User] set
      auth=#auth#
      where Id=#Id#
    </update>
    
    <delete id="delete" parameterClass="System.Int32">
      delete from [User] where Id=#Id#
    </delete>
    <sql id="selectsql">
      select * from [User]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        
        <isNotNull prepend="and" property="ID">
          Id=#ID#
        </isNotNull>
        <isNotNull prepend="and" property="IDNotEqual">
            <![CDATA[
                Id <> #IDNotEqual#
              ]]>
        </isNotNull>
        <isNotNull prepend="and" property="Email">
          Email=#Email#
        </isNotNull>
        <isNotNull prepend="and" property="Username">
          Username=#Username#
        </isNotNull>
        <isNotNull prepend="and" property="Realname">
          Realname=#Realname#
        </isNotNull>
        <isNotNull prepend="and" property="Mobile">
          Mobile=#Mobile#
        </isNotNull>

        <isNotNull prepend="and" property="Recode">
          Recode=#Recode#
        </isNotNull>
        <isNotNull prepend="and" property="Password">
          Password=#Password#
        </isNotNull>
        <isNotNull prepend="and" property="Manager">
          Manager=#Manager#
        </isNotNull>
		  <isNotNull prepend="and" property="IsManBranch">
			  IsManBranch=#IsManBranch#
		  </isNotNull>
        <isNotNull prepend="and" property="Signmobile">
          Signmobile=#Signmobile#
        </isNotNull>
        <isNotNull prepend="and" property="LoginName">
          (Username=#LoginName# or Email=#LoginName# or Mobile=#LoginName#)
        </isNotNull>
        <isNotNull prepend="and" property="City_id">
            City_id=#City_id#
        </isNotNull>
        <isNotNull prepend="and" property="City_ids">
            City_id in($City_ids$)
        </isNotNull>
        <isNotNull prepend="and" property="Enable">
           Enable=#Enable#   
        </isNotNull>
          <isNotNull prepend="and" property="Enables">
              Enable in ($Enables$)
          </isNotNull>
        <isNotNull prepend="and" property="Newbie">
          Newbie=#Newbie#
        </isNotNull>
        <isNotNull prepend="and" property="Newbies">
            Newbie in ($Newbies$)
        </isNotNull>
        <isNotNull prepend="and" property="Genders">
            Gender in ($Genders$)
        </isNotNull>
        <isNotNull prepend="and" property="userscore">
          userscore=#userscore#
        </isNotNull>

        <isNotNull prepend="and" property="ucsyc">
          ucsyc=#ucsyc#
        </isNotNull>
        
        <isNotNull prepend="and" property="Money">
          Money=#Money#
        </isNotNull>
		  
		  <isNotNull prepend="and" property="Fromdomain">
			  fromdomain=#Fromdomain#
		  </isNotNull>
		  
        <isNotNull prepend="and" property="totalamount">
          totalamount=#totalamount#
        </isNotNull>
          <isNotNull prepend="and" property="fromtotalamount">
              <![CDATA[
                totalamount >= #fromtotalamount#
              ]]>
          </isNotNull>
          <isNotNull prepend="and" property="tototalamount">
              <![CDATA[
                totalamount < #tototalamount#
              ]]>
          </isNotNull>
		  <isNotNull prepend="and" property="FromCreate_time">
			  <![CDATA[
          Create_time>=#FromCreate_time#
          ]]>
		  </isNotNull>
		  <isNotNull prepend="and" property="ToCreate_time">
			  <![CDATA[
          Create_time<=#ToCreate_time#
          ]]>
		  </isNotNull>
        
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="User" cacheModel="c">
      <include refid="selectsql" />
      where Id=#Id#
    </select>

    <select id="getbyname" parameterClass="UserFilter" resultClass="User" cacheModel="c">
      <include refid="selectsql" />
      where Username=#Username#
    </select>
	  <select id="getbyuname" parameterClass="System.String" resultClass="User" cacheModel="c">
		  <include refid="selectsql" />
		  where Username=#Username#
	  </select>
    
    <select id="getbyemail" parameterClass="UserFilter" resultClass="User" cacheModel="c">
      <include refid="selectsql" />
      where Email=#Email#
    </select>

    <select id="gettop1byfilter" parameterClass="UserFilter" resultClass="User" cacheModel="c">
      select top 1
      * from [User]
      <include refid="wheresql"/>
    <isNotEmpty property="SortOrderString">
      order by $SortOrderString$
    </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="UserFilter" resultClass="User" cacheModel="c">
      select 
      <isNotNull property="Top">
      top $Top$
     </isNotNull>
      * from [User]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="UserFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [User]
      <include refid="wheresql"/>
    </select>

    <select id="getmaxid" parameterClass="UserFilter" resultClass="System.Int32" cacheModel="c">
      select max(Id) from [User]
    </select>

    <select id="getbypage" resultClass="User" parameterClass="UserFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [User]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>