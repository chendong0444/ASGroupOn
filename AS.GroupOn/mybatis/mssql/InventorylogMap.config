<?xml version="1.0" encoding="utf-8"?>
<!--创建时间: 2012-10-25  创建人: 郑立军-->
<sqlMap namespace="InventorylogMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Inventorylog" type="AS.GroupOn.Domain.Spi.inventorylog,AS.GroupOn"/>
        <typeAlias alias="InventorylogFilter" type="AS.GroupOn.DataAccess.Filters.InventorylogFilter,AS.GroupOn"/>
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>

    <statements>
        <insert id="insert" parameterClass="Inventorylog" >
            insert into [Inventorylog]
            (num,orderid,adminid,state,create_time,remark,teamid,type)
            values
            (#num#,#orderid#,#adminid#,#state#,#create_time#,#remark#,#teamid#,#type#)
            <selectKey type="post" resultClass="System.Int32" property="Id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Inventorylog">
            update [Inventorylog] set
            num=#num#,orderid=#orderid#,adminid=#adminid#,state=#state#,create_time=#create_time#,remark=#remark#,teamid=#teamid#,type=#type#
            where Id=#Id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [Inventorylog] where id = #value#
        </delete>
        <sql id="selectsql">
            select * from [Inventorylog]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
                <isNotNull refid="and" property="Id">
                    Id=#Id#
                </isNotNull>
                <isNotNull refid="and" property="orderid">
                    orderid=#orderid#
                </isNotNull>
                <isNotNull refid="and" property="adminid">
                    adminid=#adminid#
                </isNotNull>
                <isNotNull refid="and" property="From_Createtime">
                    <![CDATA[
                     create_time>=#From_Createtime#
                    ]]>
                </isNotNull>
                <isNotNull refid="and" property ="To_Createtime">
                    <![CDATA[
                    create_time<=#To_Createtime#
                    ]]>
                </isNotNull>
                
                <isNotNull refid="and" property="teamid">
                    teamid=#teamid#
                </isNotNull>
            </dynamic>
        </sql>
        <select id="getbyid" parameterClass="System.Int32" resultClass="Inventorylog" cacheModel="c">
            <include refid="selectsql" />
            where id=#value#
        </select>
        <select id="gettop1byfilter" parameterClass="InventorylogFilter" resultClass="Inventorylog" cacheModel="c">
            select top 1
            * from [Inventorylog]
            <include refid="wheresql"/>
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>

        <select id ="getbyfilter" parameterClass="InventorylogFilter" resultClass="Inventorylog" cacheModel="c">
            select 
            <isNotNull property="Top">
                top $Top$
            </isNotNull>
                * from [Inventorylog]
                <include refid="wheresql"/>
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        
        <select id="getcount" parameterClass="InventorylogFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [Inventorylog]
            <include refid="wheresql"/>
        </select>
        
        <select id="getbypage" resultClass="Inventorylog" parameterClass="InventorylogFilter" cacheModel="c">
            WITH datatable AS
            (
            SELECT *,
            ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
            FROM [inventorylog]
            <include refid="wheresql"/>
              )
            SELECT *
            FROM datatable
            WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
         </select>
    </statements>
    
</sqlMap>
  