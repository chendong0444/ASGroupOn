<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="AuthorityMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Authority" type="AS.GroupOn.Domain.Spi.Authority,AS.GroupOn" />
    <typeAlias alias="AuthorityFilter" type="AS.GroupOn.DataAccess.Filters.AuthorityFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Authority" >
      insert into [Authority]
      (ID,AuthorityName)
      values
      (#ID#,#AuthorityName#)
    </insert>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Authority] where ID=#ID#
    </delete>
    <sql id="selectsql">
      select * from [Authority]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="ID">
          ID in(#ID#)
        </isNotNull>
       
      </dynamic>
    </sql>
    
    <select id="getbyid" parameterClass="System.Int32" resultClass="Authority" cacheModel="c"> 
      <include refid="selectsql" />
      where ID=#ID#
    </select>
    <select id="getbyfilter" parameterClass="AuthorityFilter" resultClass="Authority" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Authority]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="AuthorityFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Authority]
      <include refid="wheresql" />
    </select>
    
  </statements>
</sqlMap>