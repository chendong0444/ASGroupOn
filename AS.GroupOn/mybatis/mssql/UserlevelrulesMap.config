<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="UserlevelrulesMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Userlevelrules" type="AS.GroupOn.Domain.Spi.Userlevelrules,AS.GroupOn" />
    <typeAlias alias="UserlevelrulesFilter" type="AS.GroupOn.DataAccess.Filters.UserlevelrulesFilters,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
	 
    <insert id="insert" parameterClass="Userlevelrules">
      insert into [userlevelrules]  
      (levelid,maxmoney,minmoney,discount)
      values
      (#levelid#,#maxmoney#,#minmoney#,#discount#)
      <selectKey type="post" resultClass="System.Int32" property="id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Userlevelrules">
      update [userlevelrules] set
      levelid=#levelid#,maxmoney=#maxmoney#,minmoney=#minmoney#,discount=#discount#
      where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [userlevelrules] where id=#value#
    </delete>
    <delete id="delbylevelid" parameterClass="System.Int32">
      delete from [userlevelrules] where levelid=#levelid#
    </delete>
    <sql id="selectsql">
      select * from [userlevelrules]
    </sql>
    <sql id="wheresql">
        <dynamic prepend="where">
            <isNotNull prepend="and" property="id">
                id=#id#
            </isNotNull>
          
            <isNotNull prepend="and" property="levelid">
                levelid=#levelid#
            </isNotNull>
          <isNotNull prepend="and" property="totalamount">
            <![CDATA[
                 maxmoney>#totalamount# and minmoney<=#totalamount#
                  ]]>
          </isNotNull>
            <isNotNull prepend="and" property="maxmoney">
                <![CDATA[
                  maxmoney>#maxmoney#
                  ]]>
            </isNotNull>
            <isNotNull prepend="and" property="minmoney">
                <![CDATA[
                  minmoney<=#minmoney#
                  ]]>
            </isNotNull>
            <isNotNull prepend="and" property="discount">
                discount=#discount#
            </isNotNull>
        </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Userlevelrules" cacheModel="c">
      <include refid="selectsql" />
      where id=#id#
    </select>

	  <select id="getbyleves" parameterClass="System.Int32" resultClass="Userlevelrules" cacheModel="c">
		  select * from Category right join (select levelid,minmoney,discount from userlevelrules )t on Category.Id=t.levelid
		  <include refid="wheresql" />
	  </select>
	  
	  <select id="gettop1byfilter" parameterClass="UserlevelrulesFilter" resultClass="Userlevelrules" cacheModel="c">
        select top 1
        * from [userlevelrules]
        <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
          order by $SortOrderString$
      </isNotEmpty>
    </select>
      
      <select id="getbyfilter" parameterClass="UserlevelrulesFilter" resultClass="Userlevelrules" cacheModel="c">
          select 
          <isNotNull property="Top">
              Top $Top$
          </isNotNull>
          * from userlevelrules
          <include refid="wheresql"/>
          <isNotEmpty property="SortOrderString">
              order by $SortOrderString$
          </isNotEmpty>
      </select>
    <select id="getcount" parameterClass="UserlevelrulesFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [userlevelrules]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Userlevelrules" parameterClass="UserlevelrulesFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [userlevelrules]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>

    <select id="getdatabyminmoney" parameterClass="UserlevelrulesFilter" resultClass="Userlevelrules" cacheModel="c">
        select * from Category right join (select levelid,minmoney,discount from userlevelrules )t on Category.Id=t.levelid
        <include refid="wheresql" />
    </select>
      
  </statements>
</sqlMap>