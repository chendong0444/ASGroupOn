<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PacketMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Packet" type="AS.GroupOn.Domain.Spi.Packet,AS.GroupOn" />
		<typeAlias alias="PacketFilter" type="AS.GroupOn.DataAccess.Filters.PacketFilter,AS.GroupOn" />
	</alias>
	<cacheModels>
		<cacheModel id="c" implementation="MEMORY" readOnly="true">
			<flushInterval  seconds="3" />
			<flushOnExecute statement="insert"/>
			<flushOnExecute statement="update"/>
			<flushOnExecute statement="delete"/>
			<property name="CacheSize" value="10000" />
		</cacheModel>
	</cacheModels>
	<statements>
		<insert id="insert" parameterClass="Packet" >
			INSERT INTO [Packet]
			([User_Id],[Money],[Number],[Admin_Id],[Type],[State],[Send_Time],[Get_Time])
			values
			(#User_id#,#Money#,#Number#,#Admin_Id#,#Type#,#State#,#Send_Time#,#Get_Time#)
			<selectKey type="post" resultClass="System.Int32" property="Id">
				select @@identity as value
			</selectKey>
		</insert>
        <insert id="insertpfdjq" parameterClass="Packet" >
            INSERT INTO [Packet]
            ([User_Id],[Money],[Number],[Admin_Id],[Type],[State],[Send_Time])
            values
            (#User_id#,#Money#,#Number#,#Admin_Id#,#Type#,#State#,#Send_Time#)
            <selectKey type="post" resultClass="System.Int32" property="Id">
                select @@identity as value
            </selectKey>
        </insert>
        <insert id="inserthbcz" parameterClass="Packet" >
            INSERT INTO [Packet]
            ([User_Id],[Money],[Admin_Id],[Type],[State],[Send_Time])
            values
            (#User_id#,#Money#,#Admin_Id#,#Type#,#State#,#Send_Time#)
            <selectKey type="post" resultClass="System.Int32" property="Id">
                select @@identity as value
            </selectKey>
        </insert>
		<update id="update" parameterClass="Packet">
			update [Packet] set
			User_Id=#User_id#,Money=#Money#,Number=#Number#,Admin_Id=#Admin_Id#,Type=#Type#,State=#State#,Send_Time=#Send_Time#,Get_Time=#Get_Time#
			where Id=#Id#
		</update>
        <delete id="delete" parameterClass="System.Int32">
			delete from [Packet] where id=#value#
		</delete>
		<sql id="selectsql">
			select * from [Packet]
		</sql>
		<select id="getbyid" parameterClass="System.Int32" resultClass="Packet" cacheModel="c">
			<include refid="selectsql" />
			where id=#value#
		</select>
		<sql id="wheresql">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="Id">
					Id=#Id#
				</isNotNull>
				<isNotNull prepend="and" property="User_id">
					User_Id=#User_id#
				</isNotNull>
				<isNotNull prepend="and" property="State">
					State=#State#
				</isNotNull>
				<isNotNull prepend="and" property="FromSend_time">
					<![CDATA[
					 Send_Time>=#FromSend_time#
					 ]]>
				</isNotNull>
				<isNotNull prepend="and" property="ToSend_time">
					<![CDATA[
					 Send_Time<=#ToSend_time#
					]]>
				</isNotNull>
				<isNotNull prepend="and" property="FromGet_time">
					<![CDATA[
					 Get_Time>=#ToGet_time#
					 ]]>
				</isNotNull>
				<isNotNull prepend="and" property="ToGet_time">
					<![CDATA[
					 Get_Time<=#ToGet_time#
					 ]]>
				</isNotNull>
			</dynamic>
		</sql>
		<select id="gettop1byfilter" parameterClass="PacketFilter" resultClass="Packet" cacheModel="c">
			select top 1
			* from [Packet]
			<include refid="wheresql"/>
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getbyfilter" parameterClass="PacketFilter" resultClass="Packet" cacheModel="c">
			select
			<isNotNull property="Top">
				top $Top$
			</isNotNull>
			* from [Packet]
			<include refid="wheresql"/>
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getcount" parameterClass="PacketFilter" resultClass="System.Int32" cacheModel="c">
			select count(*) from [Packet]
			<include refid="wheresql"/>
		</select>
		<select id="getbypage" resultClass="Packet" parameterClass="PacketFilter" cacheModel="c">
			WITH datatable AS
			(
			SELECT *,
			ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
			FROM [Packet]
			<include refid="wheresql"/>
			)
			SELECT *
			FROM datatable
			WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
		</select>
	</statements>
</sqlMap>