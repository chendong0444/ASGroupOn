<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Partner_DetailMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Partner_Detail" type="AS.GroupOn.Domain.Spi.Partner_Detail,AS.GroupOn" />
		<typeAlias alias="Partner_DetailFilter" type="AS.GroupOn.DataAccess.Filters.Partner_DetailFilter,AS.GroupOn" />
	</alias>
	<cacheModels>
		<cacheModel id="c" implementation="MEMORY" readOnly="true">
			<flushInterval  seconds="3" />
			<flushOnExecute statement="insert"/>
			<flushOnExecute statement="update"/>
			<flushOnExecute statement="delete"/>
			<property name="CacheSize" value="10000" />
		</cacheModel>
	</cacheModels>
    <parameterMaps>
        <parameterMap id="swapparams" class="System.Int32">
            <parameter property="partner_id" column="partnerid"/>
        </parameterMap>
        <parameterMap id="getnum" class="System.Int32">
            <parameter property="parid" column="partnerid"/>
        </parameterMap>
    </parameterMaps>
	<statements>
        <procedure id="exts_sp_GetPMoney" parameterMap="swapparams">
            sp_GetPMoney
        </procedure>
        <procedure id="GetActualPMoney" parameterMap="getnum">
            sp_GetActualPMoney
        </procedure>
        
		<insert id="insert" parameterClass="Partner_Detail" >
			INSERT INTO [Partner_Detail]
			(partnerid,createtime,adminid,money,remark,settlementremark,settlementstate,team_id,num)
			values
			(#partnerid#,#createtime#,#adminid#,#money#,#remark#,#settlementremark#,#settlementstate#,#team_id#,#num#)
			<selectKey type="post" resultClass="System.Int32" property="id">
				select @@identity as value
			</selectKey>
		</insert>
		<update id="update" parameterClass="Partner_Detail">
			update [Partner_Detail] set
			partnerid=#partnerid#,createtime=#createtime#,adminid=#adminid#,money=#money#,remark=#remark#,settlementremark=#settlementremark#,settlementstate=#settlementstate#,team_id=#team_id#,num=#num#
			where id=#id#
		</update>
		<delete id="delete" parameterClass="System.Int32">
			delete from [Partner_Detail] where id=#value#
		</delete>
		<sql id="selectsql">
			select * from [Partner_Detail]
		</sql>
		<sql id="wheresql">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="id">
                    id=#id#
                </isNotNull>
				<isNotNull prepend="and" property="partnerid">
					partnerid=#partnerid#
				</isNotNull>
				<isNotNull prepend="and" property="FromCreate_time">
					<![CDATA[
					createtime>=#FromCreate_time#
					 ]]>
				</isNotNull>
				<isNotNull prepend="and" property="ToCreate_time">
					<![CDATA[
					createtime<=#ToCreate_time#
					 ]]>
				</isNotNull>
				<isNotNull prepend="and" property="settlementstate">
                    settlementstate=#settlementstate#
                </isNotNull>
                <isNotNull prepend="and" property="team_id">
					team_id=#team_id#
				</isNotNull>
                <isNotNull prepend="and" property="Parid">
					partnerid=#Parid# and settlementstate=8
				</isNotNull>
                
			</dynamic>
		</sql>
		<select id="getbyid" parameterClass="System.Int32" resultClass="Partner_Detail" cacheModel="c">
			<include refid="selectsql" />
			where id=#value#
		</select>
		<select id="gettop1byfilter" parameterClass="Partner_DetailFilter" resultClass="Partner_Detail" cacheModel="c">
			select top 1
			* from [Partner_Detail]
			<include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getbyfilter" parameterClass="Partner_DetailFilter" resultClass="Partner_Detail" cacheModel="c">
			select
			<isNotNull property="Top">
				top $Top$
			</isNotNull>
			* from [Partner_Detail]
			<include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getcount" parameterClass="Partner_DetailFilter" resultClass="System.Int32" cacheModel="c">
			select count(*) from [Partner_Detail]
			<include refid="wheresql" />
		</select>
		<select id="getbypage" resultClass="Partner_Detail" parameterClass="Partner_DetailFilter" cacheModel="c">
			WITH datatable AS
			(
			SELECT *,
			ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
			FROM [Partner_Detail]
			<include refid="wheresql" />
			)
			SELECT *
			FROM datatable
			WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
		</select>
        <select id="getRealSettle" partnerClass="Partner_DetailFilter" resultClass="System.Int32" cacheModel="c">
            select isnull(sum(Money),0) as money from Partner_Detail
            <include refid="wheresql"/>
        </select>

        <select id="GetYjsMenory" partnerClass="Partner_DetailFilter" resultClass="System.Int32" cacheModel="c">
            select sum([Money]) from Partner_Detail
            <include refid="wheresql"/>
        </select>
    <select id="seljiesuan" partnerClass="Partner_DetailFilter" resultClass="Hashtable" cacheModel="c">
      select sum(num) as num,sum(money) as money from partner_detail
      <include refid="wheresql"/>
    </select>
	</statements>
</sqlMap>