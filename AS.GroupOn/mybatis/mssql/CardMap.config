<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="CardMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Card" type="AS.GroupOn.Domain.Spi.Card,AS.GroupOn" />
    <typeAlias alias="CardFilter" type="AS.GroupOn.DataAccess.Filters.CardFilter,AS.GroupOn" />
  </alias>

    <resultMap id="selectHongBaoShaiXuan" class="Card">
        <result property="uId" column="uId"/>
        <result property="uEmail" column="uEmail"/>
        <result property="uUserName" column="uUserName"/>
        <result property="uRealname" column="uRealname"/>
        <result property="uCity_id" column="uCity_id"/>
        <result property="uMoney" column="uMoney"/>
        <result property="uTotalamount" column="uTotalamount"/>
        <result property="uZipcode" column="uZipcode"/>
        <result property="uCreate_time" column="uCreate_time"/>
        <result property="uMobile" column="uMobile"/>
        <result property="oCount" column="oCount"/>
    </resultMap>

    <resultMap id="selectHongBaoShaiXuanTid" class="Card">
        <result property="uId" column="uId"/>
        <result property="uEmail" column="uEmail"/>
        <result property="uUserName" column="uUserName"/>
        <result property="uRealname" column="uRealname"/>
        <result property="uCity_id" column="uCity_id"/>
        <result property="uMoney" column="uMoney"/>
        <result property="uTotalamount" column="uTotalamount"/>
        <result property="uZipcode" column="uZipcode"/>
        <result property="uCreate_time" column="uCreate_time"/>
        <result property="uMobile" column="uMobile"/>
        <result property="oCount" column="oCount"/>
    </resultMap>
    
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Card" >
      insert into [Card]
      <!--(Id,Code,Partner_id,Team_id,Order_id,Credit,consume,Ip,Begin_time,End_time,user_id,isGet)-->
        (Id,Code,Partner_id,Team_id,Order_id,Credit,Ip,Begin_time,End_time)
        values
        (#Id#,#Code#,#Partner_id#,#Team_id#,#Order_id#,#Credit#,#Ip#,#Begin_time#,#End_time#)
        <!--(#Id#,#Code#,#Partner_id#,#Team_id#,#Order_id#,#Credit#,#consume#,#Ip#,#Begin_time#,#End_time#,#user_id#,#isGet#)-->
        
    </insert>
    <update id="update" parameterClass="Card">
      update [Card] set
      Code=#Code#,Partner_id=#Partner_id#,Team_id=#Team_id#,Order_id=#Order_id#,Credit=#Credit#,consume=#consume#,Ip=#Ip#,Begin_time=#Begin_time#,End_time=#End_time#,user_id=#user_id#,isGet=#isGet#
      where Id=#Id#
    </update>
    <delete id="delete" parameterClass="System.String">
      delete from [Card] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Card]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Id">
          Id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="Code">
          Code=#Code#
        </isNotNull>
        <isNotNull prepend="and" property="consume">
          consume=#consume#
        </isNotNull>
        <isNotNull prepend="and" property="user_id">
          user_id=#user_id#
        </isNotNull>
        <isNotNull prepend="and" property="isGet">
          isGet=#isGet#
        </isNotNull>
        <isNotNull prepend="and" property="Team_id">
            Team_id=#Team_id#
        </isNotNull>
        <isNotNull prepend="and" property="Partner_id">
            Partner_id=#Partner_id#
        </isNotNull>
		 
		<isNotNull prepend="and" property="Order_id">
			Order_id=#Order_id#
		</isNotNull>
		  <isNotNull prepend="and" property="inOrder_id">
			  Order_id in (select id from [Order] where City_id=#inOrder_id#)
		  </isNotNull>
        <isNotNull prepend="and" property="WhereUser_id">
          <![CDATA[
            user_id!=0 and  user_id is not null
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="Fromuser_id">
          <![CDATA[
          user_id>0
          ]]>  <!--已派发-->
        </isNotNull>
        <isNotNull prepend="and" property="FromEnd_time">
            <![CDATA[
            End_time>=#FromEnd_time#
            ]]>  <!--有效期开始时间-->
        </isNotNull>
        <isNotNull prepend="and" property="ToEnd_time">
            <![CDATA[
            End_time<=#ToEnd_time#
            ]]>
        </isNotNull>

        <isNotNull prepend="and" property="FromuCreate_time">
            <![CDATA[
                uCreate_time>=#FromuCreate_time#
                ]]>
        </isNotNull>
        <isNotNull prepend="and" property="TouCreate_time">
            <![CDATA[
                uCreate_time<=#TouCreate_time#
                ]]>
        </isNotNull>
        <isNotNull prepend="and" property="FromoCount">
            <![CDATA[
                oCount>=#FromoCount#
                ]]>
        </isNotNull>
        <isNotNull prepend="and" property="uCity_id">
            uCity_id=#uCity_id#
        </isNotNull>
        <isNotNull prepend="and" property="FromuTotalamount">
            <![CDATA[
                uTotalamount>#FromuTotalamount#
                ]]>
        </isNotNull>
        <isNotNull prepend="and" property="TouTotalamount">
            <![CDATA[
                uTotalamount<=#TouTotalamount#
                ]]>
        </isNotNull>
        <isNotNull prepend="and" property="teamid">
            teamid=#teamid#
        </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Card" cacheModel="c">
      <include refid="selectsql" />
      where Id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="CardFilter" resultClass="Card" cacheModel="c">
      select top 1
      * from [Card]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="CardFilter" resultClass="Card" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Card]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="CardFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Card]
      <include refid="wheresql"/>
    </select>
    <select id="getbypage" resultClass="Card" parameterClass="CardFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Card]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
    <select id="selectCardDown" resultClass="HashMap" parameterClass="CardFilter">
        select top 1 t.Id,c.Team_id from Team as t,Card as c
        <dynamic prepend="where">
            <isNotNull prepend="and" property="ToBegin_time">
                <![CDATA[
            t.Id=c.Team_id and t.Begin_time<=#ToBegin_time#
        ]]>
            </isNotNull>
            <isNotNull prepend="and" property="FromEnd_time">
                <![CDATA[
            t.End_time>=#FromEnd_time#
        ]]>
            </isNotNull>
            <isNotNull prepend="and" property="Partner_id">
            c.Partner_id=#Partner_id#
        </isNotNull>
        <isNotNull prepend="and" property="Code">
            c.Code=#Code#
        </isNotNull>
            <isNotEmpty property="SortOrderString">
                order by newid()
            </isNotEmpty>
        </dynamic>
    </select>
      <select id="getcount2" parameterClass="CardFilter" resultClass="System.Int32" cacheModel="c">
          select count(*) from
          (select oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by userid) ttt,[User] where userid=[User].id ) tttt
          <include refid="wheresql"/>
      </select>
      <select id="getbypage2" resultClass="Card" parameterClass="CardFilter" cacheModel="c">
          WITH datatable AS
          (
          SELECT uId,uEmail,uUserName,uRealname,uCity_id,uMoney,uTotalamount,uZipcode,uCreate_time,uMobile,oCount,
          ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
          FROM
          (select oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by userid) ttt,[User] where userid=[User].id ) tttt
          <include refid="wheresql"/>
          )
          SELECT *
          FROM datatable
          WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
      </select>
      <select id="getcount3" parameterClass="CardFilter" resultClass="System.Int32" cacheModel="c">
          select count(*) from
          (select teamid,oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select teamid,SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by teamid,userid) ttt,[User] where userid=[User].id ) tttt
          <include refid="wheresql"/>
      </select>
      <select id="getbypage3" resultClass="Card" parameterClass="CardFilter" cacheModel="c">
          WITH datatable AS
          (
          SELECT teamid,uId,uEmail,uUserName,uRealname,uCity_id,uMoney,uTotalamount,uZipcode,uCreate_time,uMobile,oCount,
          ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
          FROM
          (select teamid,oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select teamid,SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by teamid,userid) ttt,[User] where userid=[User].id ) tttt
          <include refid="wheresql"/>
          )
          SELECT *
          FROM datatable
          WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
      </select>
      <select id="selectHongBaoShaiXuan" resultClass="Card" parameterClass="CardFilter">
          select top 10 uId,uEmail,uUserName,uRealname,uCity_id,uMoney,uTotalamount,uZipcode,uCreate_time,uMobile,oCount 
          from(select oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by userid) ttt,[User] where userid=[User].id ) tttt
          <dynamic prepend="where">
              <isNotNull prepend="and" property="FromuCreate_time">
                  <![CDATA[
                    uCreate_time>=#FromuCreate_time#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="TouCreate_time">
                  <![CDATA[
                    uCreate_time<=#TouCreate_time#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="FromoCount">
                  <![CDATA[
                    oCount>=#FromoCount#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="uCity_id">
                  uCity_id=#uCity_id#
              </isNotNull>
              <isNotNull prepend="and" property="FromuTotalamount">
                  <![CDATA[
                    uTotalamount>#FromuTotalamount#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="TouTotalamount">
                  <![CDATA[
                    uTotalamount<=#TouTotalamount#
                  ]]>
              </isNotNull>
              <isNotEmpty property="SortOrderString">
                  order by newid()
              </isNotEmpty>
          </dynamic>
      </select>
      <select id="selectHongBaoShaiXuanTid" resultClass="Card" parameterClass="CardFilter">
          select top 10 uId,uEmail,uUserName,uRealname,uCity_id,uMoney,uTotalamount,uZipcode,uCreate_time,uMobile,oCount 
          from(select teamid,oCount,userid as uId,Username as uUsername,Email as uEmail,Zipcode as uZipcode ,Mobile as uMobile,
          Money as uMoney,totalamount as uTotalamount,Realname as uRealname,City_id as uCity_id,Create_time as uCreate_time  from
          ( select teamid,SUM(aa) as oCount,userid from ( select teamid ,COUNT(oid ) as aa,userid
          from(select ISNULL(Teamid,Team_id) as teamid,[Order].id as oid ,User_id  as userid from [Order]
          left join orderdetail on([Order].Id=[orderdetail].Order_id)
          where state='pay' or State='scorepay' group by teamid,Team_id,[Order].id ,User_id   )t
          inner join Team on(Team.Id=t.teamid) group by oid,teamid, userid ) tt group by teamid,userid) ttt,[User] where userid=[User].id ) tttt
          <dynamic prepend="where">
              <isNotNull prepend="and" property="FromuCreate_time">
                  <![CDATA[
                    uCreate_time>=#FromuCreate_time#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="TouCreate_time">
                  <![CDATA[
                    uCreate_time<=#TouCreate_time#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="FromoCount">
                  <![CDATA[
                    oCount>=#FromoCount#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="uCity_id">
                  uCity_id=#uCity_id#
              </isNotNull>
              <isNotNull prepend="and" property="FromuTotalamount">
                  <![CDATA[
                    uTotalamount>#FromuTotalamount#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="TouTotalamount">
                  <![CDATA[
                    uTotalamount<=#TouTotalamount#
                  ]]>
              </isNotNull>
              <isNotNull prepend="and" property="teamid">
                  teamid=#teamid#
              </isNotNull>
              <isNotEmpty property="SortOrderString">
                  order by newid()
              </isNotEmpty>
          </dynamic>
      </select>

      <select id="getcardlists" parameterClass="System.String" resultClass="Card" cacheModel="c">
          $value$
      </select>

      <select id="getcount4" parameterClass="CardFilter" resultClass="System.Int32" cacheModel="c">
          select count(*) from
          (select * from card where isGet=#isGet# and [user_id]=#user_id# and (Team_id in (
          select Id from Team where teamcata=0) or Team_id=0))s
          <include refid="wheresql"/>
      </select>
      <select id="getbypage4" resultClass="Card" parameterClass="CardFilter" cacheModel="c">
          WITH datatable AS
          (
          SELECT *,
          ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
          FROM
          (select * from card where isGet=#isGet# and [user_id]=#user_id# and (Team_id in (
          select Id from Team where teamcata=0) or Team_id=0))s
          <include refid="wheresql"/>
          )
          SELECT *
          FROM datatable
          WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
      </select>
  </statements>
</sqlMap>