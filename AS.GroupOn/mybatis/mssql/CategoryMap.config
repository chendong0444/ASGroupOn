<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="CategoryMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Category" type="AS.GroupOn.Domain.Spi.Category,AS.GroupOn" />
    <typeAlias alias="CategoryFilter" type="AS.GroupOn.DataAccess.Filters.CategoryFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <parameterMaps>
    <parameterMap id="swapparams" class="System.Int32">
      <parameter property="id" column="id"/>
    </parameterMap>
    
  </parameterMaps>
  <statements>
    <procedure id="exts_proc_del_api" parameterMap="swapparams">
      proc_del_api
    </procedure>
    
    <insert id="insert" parameterClass="Category">
      insert into [Category]
      (Zone,Czone,Name,Ename,Letter,Sort_order,Display,content,City_pid)
      values
      (#Zone#,#Czone#,#Name#,#Ename#,#Letter#,#Sort_order#,#Display#,#content#,#City_pid#)
      <selectKey type="post" resultClass="System.Int32" property="Id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Category">
      update [Category] set
      Zone=#Zone#,Czone=#Czone#,Name=#Name#,Ename=#Ename#,Letter=#Letter#,Sort_order=#Sort_order#,Display=#Display#,content=#content#,City_pid=#City_pid#
      where Id=#Id#
    </update>
    <update id="upbyczone" parameterClass="Category">
      update Category set Czone='0' where Czone=#Czone#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Category] where Id=#value#
    </delete>
    
    <sql id="selectsql">
      select * from [Category]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Id">
          Id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="Zone">
          Zone=#Zone#
        </isNotNull>
        <isNotNull prepend="and" property="Display">
          Display =#Display#
        </isNotNull>
        <isNotNull prepend="and" property="Name">
          Name =#Name#
        </isNotNull>
        <isNotNull prepend="and" property="Letter">
          Letter=#Letter#
        </isNotNull>
        <isNotNull prepend="and" property="Ename">
          Ename=#Ename#
        </isNotNull>
        <isNotNull prepend="or" property="orEname">
          Ename=#orEname#
        </isNotNull>
        <isNotNull prepend="and" property="City_pid">
          City_pid=#City_pid#
        </isNotNull>
		  <isNotNull prepend="and" property="Czone">
			  Czone=#Czone#
		  </isNotNull>
          <isNotNull prepend="and" property="Sort_order">
              Sort_order=#Sort_order#
          </isNotNull>
        <isNotNull prepend="and" property="NameLike">
          Name like '%'+#NameLike#+'%'
        </isNotNull>
        <isNotEmpty prepend="and" property="Where">
          $Where$
        </isNotEmpty>
      </dynamic>
    </sql>

    <select id="selectbyid" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
      select  top 1 Id,Zone,Czone,Name,Ename,Letter,Sort_order,Display,content,City_pid from Category
      where Id=#Id#
    </select>

    <select id="selsectbyzd" parameterClass="CategoryFilter" resultClass="Category">
      select * from category where Zone='citygroup' and Display='Y'  order by Sort_order desc
    </select>
    <select id="getbyexpress" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
      select t.Id,t.Name,COUNT(*) as Num from (select Id,Name from Category where Zone=#Zone#)t left join [Order] on(t.Id=[Order].Express_id) where [Order].State='pay' and Express='Y' and Service!='cashondelivery' and [Order].Express_id>0 and isnull([Order].Express_xx,'')!='已打印' group by t.Id,t.Name
    </select>

    <select id="getbycashexpress" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
      select t.Id,t.Name,COUNT(*) as Num from (select Id,Name from Category where Zone=#Zone#)t left join [Order] on(t.Id=[Order].Express_id) where
      [Order].service='cashondelivery' and ([Order].State='nocod' or [Order].State='pay') and Express='Y' and Express_id>0 and isnull(express_xx,'')!='已打印'
      group by t.Id,t.Name
    </select>
    
    <select id="getbyid" parameterClass="System.Int32" resultClass="Category" cacheModel="c">
          <include refid="selectsql" />
          where Id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
      select top 1
      * from [Category]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
	  <select id="getletterbyfilter" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
		  select distinct
		  <isNotNull property="Top">
			  top $Top$
		  </isNotNull>
		   Letter from [Category]
		  <include refid="wheresql"/>
		  <isNotEmpty property="SortOrderString">
			  order by $SortOrderString$
		  </isNotEmpty>
	  </select>
    <select id="getbyfilter" parameterClass="CategoryFilter" resultClass="Category" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Category]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="CategoryFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Category]
      <include refid="wheresql"/>
    </select>
	  
    <select id="getbypage" resultClass="Category" parameterClass="CategoryFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Category]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>





</sqlMap>