<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="CouponMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Coupon" type="AS.GroupOn.Domain.Spi.Coupon,AS.GroupOn" />
    <typeAlias alias="CouponFilter" type="AS.GroupOn.DataAccess.Filters.CouponFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Coupon" >
      insert into [Coupon]
      (Id,User_id,Partner_id,Team_id,Order_id,Type,Credit,Secret,Consume,IP,Sms,Expire_time,Consume_time,Create_time,Sms_time,start_time,shoptypes)
      values      (#Id#,#User_id#,#Partner_id#,#Team_id#,#Order_id#,#Type#,#Credit#,#Secret#,#Consume#,#IP#,#Sms#,#Expire_time#,#Consume_time#,#Create_time#,#Sms_time#,#start_time#,#shoptypes#)
      <selectKey type="post" resultClass="System.Int32" property="Id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Coupon">
      update [Coupon] set
      User_id=#User_id#,Partner_id=#Partner_id#,Team_id=#Team_id#,Order_id=#Order_id#,Type=#Type#,Credit=#Credit#,Secret=#Secret#,Consume=#Consume#,IP=#IP#,Sms=#Sms#,Expire_time=#Expire_time#,Consume_time=#Consume_time#,Create_time=#Create_time#,Sms_time=#Sms_time#,start_time=#start_time#,shoptypes=#shoptypes#
      where Id=#Id#
    </update>

    <update id="upcoupon" parameterClass="Coupon">
      update [Coupon] set
      Consume=#Consume#,IP=#IP#,Consume_time=#Consume_time#
      where Id=#Id# and Secret=#Secret#
    </update>

    <update id="updateShoptypes" parameterClass="Coupon" resultClass="System.Int32">
      update [Coupon] set
      shoptypes=#shoptypes#
      where Id=#Id# and Secret=#Secret#
    </update>

    <delete id="delete" parameterClass="System.String">
      delete from [Coupon] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Coupon]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Id">
          Id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="shoptypes">
          shoptypes=#shoptypes#
        </isNotNull>
        <isNotNull prepend="and" property="User_id">
          User_id=#User_id#
        </isNotNull>
        <isNotNull prepend="and" property="Partner_id">
          Partner_id=#Partner_id#
        </isNotNull>
        <isNotNull prepend="and" property="inOrder_id">
          Order_id in (select id from [Order] where City_id=#inOrder_id#)
        </isNotNull>
        <isNotNull prepend="and" property="Team_id">
          <![CDATA[ (Team_id=#Team_id# and Sms>0) ]]>
        </isNotNull>
        <isNotNull prepend="and" property="Team_ids">
          Team_id=#Team_ids#
        </isNotNull>
        <isNotNull prepend="and" property="Order_id">
          Order_id=#Order_id#
        </isNotNull>
        <isNotNull prepend="and" property="Consume">
          Consume=#Consume#
        </isNotNull>
        <isNotNull prepend="and" property="Consumes">
          Consume in ($Consumes$)
        </isNotNull>
        <isNotNull prepend="and" property="Secret">
          Secret=#Secret#
        </isNotNull>
        <isNotNull prepend="and" property="FromExpire_time">
          <![CDATA[
          Expire_time>=#FromExpire_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToExpire_time">
          <![CDATA[
          Expire_time<=#ToExpire_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="FromConsume_time">
          <![CDATA[
          Consume_time>=#FromConsume_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToConsume_time">
          <![CDATA[
          Consume_time<=#ToConsume_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="FromCreate_time">
          <![CDATA[
          Create_time>=#FromCreate_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToCreate_time">
          <![CDATA[
          Create_time<=#ToCreate_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="FromStart_time">
          <![CDATA[
          start_time>=#FromStart_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToStart_time">
          <![CDATA[
          start_time<=#ToStart_time#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="where">
          $where$
        </isNotNull>
      </dynamic>
    </sql>
    <delete id="deletes" parameterClass="System.String">
      delete from [Coupon]
      <include refid="wheresql"/>
    </delete>
    <select id="selbyid1" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(c.Id) from coupon c inner join team t on c.team_id=t.id  where  t.delivery='coupon'
      and c.partner_id=#Partner_id#
      and c.team_id=#Team_ids#
    </select>
    <select id="selbyid2" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(c.Id) from coupon c inner join team t on c.team_id=t.id  where
      c.consume ='Y' and t.delivery='coupon' and c.partner_id=#Partner_id# and c.team_id=#Team_ids#
    </select>
    <select id="selbyid3" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(c.Id) from coupon c inner join team t on c.team_id=t.id
      where c.consume ='N' and t.delivery='coupon' and
      c.partner_id=#Partner_id#
      and c.team_id=#Team_ids#
    </select>

    <select id="couponnumber" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) as num from coupon where consume='Y'
      and team_id=#Team_ids# and partner_id=#Partner_id#
    </select>


    <select id="getbyid" parameterClass="System.Int32" resultClass="Coupon" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="CouponFilter" resultClass="Coupon" cacheModel="c">
      select top 1
      * from [Coupon]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="CouponFilter" resultClass="Coupon" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Coupon]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Coupon]
      <include refid="wheresql"/>
    </select>

    <select id="selectcount" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(Id) from [Coupon] where
      Partner_id= #Partner_id#  and Team_id= #Team_id#

    </select>

    <select id="getbypage" resultClass="Coupon" parameterClass="CouponFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Coupon]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>

    <select id="getcount2" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from (SELECT [User].Username, [User].Email, Team.Title,team.city_id, Coupon.* FROM Coupon
      LEFT OUTER JOIN Team ON Coupon.Team_id = Team.Id LEFT OUTER JOIN [User] ON Coupon.User_id = [User].Id)t
      <include refid="wheresql" />
    </select>
    <select id="getbypage2" resultClass="Coupon" parameterClass="CouponFilter" cacheModel="c">
      WITH datatable AS
      (
      select *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM  (SELECT [User].Username, [User].Email, Team.Title,team.city_id, Coupon.* FROM Coupon
      LEFT OUTER JOIN Team ON Coupon.Team_id = Team.Id LEFT OUTER JOIN [User] ON Coupon.User_id = [User].Id)t
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
    <select id="countcoupon" parameterClass="CouponFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from $table$
      <include refid="wheresql" />
    </select>
    <select id="pagercoupon" resultClass="Coupon" parameterClass="CouponFilter" cacheModel="c">
      WITH datatable AS
      (
      select *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM  $table$
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>