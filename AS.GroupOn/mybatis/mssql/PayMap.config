<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PayMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Pay" type="AS.GroupOn.Domain.Spi.Pay,AS.GroupOn" />
    <typeAlias alias="PayFilter" type="AS.GroupOn.DataAccess.Filters.PayFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Pay" >
      insert into [Pay]
      (Id,Order_id,Bank,Money,Currency,Service,Create_time)
      values
      (#Id#,#Order_id#,#Bank#,#Money#,#Currency#,#Service#,#Create_time#)
    </insert>
    <update id="update" parameterClass="Pay">
      update [Pay] set
      Order_id=#Order_id#,Bank=#Bank#,Money=#Money#,Currency=#Currency#,Service=#Service#,Create_time=#Create_time#
      where Id=#Id#
    </update>
    <update id="updatemoney" parameterClass="Pay">
      update [Pay] set
        Money=#Money#
      where Id=#Id#
    </update>
    <delete id="delete" parameterClass="System.String">
      delete from [Pay] where Id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Pay]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Id">
          Id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="Bank">
          Bank=#Bank#
        </isNotNull>
		  <isNotNull prepend="and" property="Order_id">
			  Order_id=#Order_id#
		  </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Pay" cacheModel="c">
      <include refid="selectsql" />
      where Id=#value#
    </select>
    
    <select id="getbybank" parameterClass="PayFilter" resultClass="Pay" cacheModel="c">
      <include refid="selectsql" />
      where Bank=#Bank#
    </select>
    
    <select id="gettop1byfilter" parameterClass="PayFilter" resultClass="Pay" cacheModel="c">
      select top 1
      * from [Pay]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="PayFilter" resultClass="Pay" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Pay]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="PayFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Pay]
      <include refid="wheresql"/>
    </select>
    <select id="getbypage" resultClass="Pay" parameterClass="PayFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Pay]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>