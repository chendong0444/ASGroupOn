<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="MailtasksMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Mailtasks" type="AS.GroupOn.Domain.Spi.Mailtasks,AS.GroupOn"/>
        <typeAlias alias="MailtasksFilter" type="AS.GroupOn.DataAccess.Filters.MailtasksFilter,AS.GroupOn"/>
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>
    <statements>
        <insert id="insert" parameterClass="Mailtasks">
            insert into [Mailtasks]
            (subject,content,sendcount,totalcount,readmailerid,readcount,state,cityid)
            values
            (#subject#,#content#,#sendcount#,#totalcount#,#readmailerid#,#readcount#,#state#,#cityid#)
            <selectKey type="post" resultClass="System.Int32" property="id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Mailtasks">
            update [Mailtasks] set
            subject=#subject#,content=#content#,sendcount=#sendcount#,totalcount=#totalcount#,readmailerid=#readmailerid#,readcount=#readcount#,state=#state#,cityid=#cityid#
            where id=#id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [Mailtasks]
            where id=#value#
        </delete>
        <sql id="selectsql">
            select * from [Mailtasks]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
                <isNotNull prepend="and" property="id">
                    id=#id#
                </isNotNull>
                <isNotNull prepend="and" property="cityid">
                    cityid=#cityid#
                </isNotNull>
                <isNotNull prepend="and" property="state">
                    state=#state#
                </isNotNull>
            </dynamic>
        </sql>
        <select id="gettop1byfilter" parameterClass="MailtasksFilter" resultClass="Mailtasks" cacheModel="c">
            select top 1 * from [Mailtasks]
            <include refid="wheresql"/>
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getbyfilter" parameterClass="MailtasksFilter" resultClass="Mailtasks" cacheModel="c">
            select
            <isNotNull property="Top">
                Top $Top$
            </isNotNull>
            * from [Mailtasks]
            <include refid="wheresql"/>
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getcount" parameterClass="MailtasksFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [Mailtasks]
            <include refid="wheresql"/>
        </select>
        <select id="getbyid" parameterClass="System.Int32" resultClass="Mailtasks" cacheModel="c">
            <include refid="selectsql"/>
            where id=#value#
        </select>
        <select id="getbypage" parameterClass="MailtasksFilter" resultClass="Mailtasks" cacheModel="c">
            WITH datatable as
            (
            select *, row_number() over(order by $SortOrderString$) as 'RowNumber'
            from [mailtasks]
            <include refid="wheresql"/>
            )
            select * from datatable
            WHERE  RowNumber between #StartRow# and #EndRow#
        </select>
        <select id="getmaxid"  resultClass="System.Int32" cacheModel="c">
            select max(id) from [Mailtasks]
        </select>
    </statements>
</sqlMap>