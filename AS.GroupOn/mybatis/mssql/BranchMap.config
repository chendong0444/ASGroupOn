<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="BranchMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Branch" type="AS.GroupOn.Domain.Spi.Branch,AS.GroupOn" />
    <typeAlias alias="BranchFilter" type="AS.GroupOn.DataAccess.Filters.BranchFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Branch" >
        insert into [Branch]
        (partnerid,username,userpwd,branchname,contact,phone,address,mobile,point,secret,verifymobile)
        values 
        (#partnerid#,#username#,#userpwd#,#branchname#,#contact#,#phone#,#address#,#mobile#,#point#,#secret#,#verifymobile#)
        <selectKey type="post" resultClass="System.Int32" property="id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Branch">
        update [Branch] set
        partnerid=#partnerid#,username=#username#,userpwd=#userpwd#,branchname=#branchname#,contact=#contact#,phone=#phone#,
        address=#address#,mobile=#mobile#, point=#point#,secret=#secret#,verifymobile=#verifymobile#
        where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Branch] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Branch]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id">
          id=#id#
        </isNotNull>
        <isNotNull prepend="and" property="partnerid">
          partnerid=#partnerid#
        </isNotNull>
        <isNotNull prepend="and" property="branchname">
          branchname=#branchname#
        </isNotNull>
        <isNotNull prepend="and" property="contact">
          contact=#contact#
        </isNotNull>
        <isNotNull prepend="and" property="mobile">
          mobile=#mobile#
        </isNotNull>
        <isNotNull prepend="and" property="point">
          point=#point#
        </isNotNull>
        <isNotNull prepend="and" property="phone">
          phone=#phone#
        </isNotNull>
        <isNotNull prepend="and" property="username">
          username=#username#
        </isNotNull>
        <isNotNull prepend="and" property="userpwd">
          userpwd=#userpwd#
        </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Branch" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="BranchFilter" resultClass="Branch" cacheModel="c">
      select top 1
      * from [Branch]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="BranchFilter" resultClass="Branch" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Branch]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="BranchFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Branch]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Branch" parameterClass="BranchFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Branch]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
    <select id="count" parameterClass="BranchFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from $table$
    </select>
    <select id="page" resultClass="Branch" parameterClass="BranchFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM $table$
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>