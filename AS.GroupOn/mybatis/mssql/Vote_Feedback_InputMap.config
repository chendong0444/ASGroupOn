<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Vote_Feedback_InputMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Vote_Feedback_Input" type="AS.GroupOn.Domain.Spi.Vote_Feedback_Input,AS.GroupOn" />
    <typeAlias alias="Vote_Feedback_InputFilters" type="AS.GroupOn.DataAccess.Filters.Vote_Feedback_InputFilters,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Vote_Feedback_Input" >
      insert into [vote_feedback_input]
      (feedback_id,options_id,value)
      values
      (#feedback_id#,#options_id#,#value#)
      <selectKey type="post" resultClass="System.Int32" property="id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Vote_Feedback_Input">
      update [vote_feedback_input] set
      feedback_id=#feedback_id#,options_id=#options_id#,value=#value#
      where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [vote_feedback_input] where id=#id#
    </delete>
    <sql id="selectsql">
      select * from [vote_feedback_input]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Feedback_ID">
          feedback_id=#Feedback_ID#
        </isNotNull>
        <isNotNull prepend="and" property="Options_ID">
          options_id=#Options_ID#
        </isNotNull>
        <isNotNull prepend="and" property="Wheresql">
          ($Wheresql$)
        </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Vote_Feedback_Input" cacheModel="c">
      <include refid="selectsql" />
      where id=#id#
    </select>
    <select id="gettop1byfilter" parameterClass="Vote_Feedback_InputFilters" resultClass="Vote_Feedback_Input" cacheModel="c">
      select top 1
      * from [vote_feedback_input]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="Vote_Feedback_InputFilters" resultClass="Vote_Feedback_Input" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [vote_feedback_input]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="Vote_Feedback_InputFilters" resultClass="System.Int32" cacheModel="c">
      select count(*) from [vote_feedback_input]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Vote_Feedback_Input" parameterClass="Vote_Feedback_InputFilters" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [vote_feedback_input]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>