<?xml version="1.0" encoding="utf-8" ?>
<!--角色-->
<sqlMap namespace="RoleMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Role" type="AS.GroupOn.Domain.Spi.Role,AS.GroupOn" />
        <typeAlias alias="RoleFilter" type="AS.GroupOn.DataAccess.Filters.RoleFilter,AS.GroupOn" />
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>
    <statements>
        <insert id="insert" parameterClass="Role" >
            insert into [Role]
            (rolename,code)
            values
            (#rolename#,#code#)
            <selectKey type="post" resultClass="System.Int32" property="Id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Role">
            update [Role] set
            rolename=#rolename#,code=#code#
            where Id=#Id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [Role] where Id=#value#
        </delete>
      <delete id="delbycode" parameterClass="System.String">
        delete from RoleAuthority
        where roleid=(
        select Role.Id from Role where code=#code#)
      </delete>
        <sql id="selectsql">
            select * from [Role]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
                <isNotNull prepend="and" property="rolename">
                    rolename=#rolename#
                </isNotNull>
              <isNotNull prepend="and" property="code">
                code=#code#
              </isNotNull>
            </dynamic>
        </sql>
      <select id="selectbycode" parameterClass="System.String" resultClass="Hashtable" cacheModel="c">
        select AuthorityName,Authority.ID from Authority
        where Authority.ID in(
        select RoleAuthority.AuthorityID from RoleAuthority
        where roleid in(
        select Role.Id from Role where code=#code#))
      </select>
      <select id="selectid" parameterClass="System.String" resultClass="Role" cacheModel="c">
        select Id from Role where code=#code#
      </select>
      <select id="selectcode" parameterClass="System.Int32" resultClass="Role" cacheModel="c">
        select code from Role where Id=#Id#
      </select>
        <select id="getbyid" parameterClass="System.Int32" resultClass="Role" cacheModel="c">
          <include refid="selectsql" />
          where Id=#value#
        </select>
        <select id="gettop1byfilter" parameterClass="RoleFilter" resultClass="Role" cacheModel="c">
            select top 1
            * from [Role]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getbyfilter" parameterClass="RoleFilter" resultClass="Role" cacheModel="c">
            select
            <isNotNull property="Top">
                top $Top$
            </isNotNull>
            * from [Role]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getcount" parameterClass="RoleFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [Role]
            <include refid="wheresql" />
        </select>
        <select id="getbypage" resultClass="Role" parameterClass="RoleFilter" cacheModel="c">
            WITH datatable AS
            (
            SELECT *,
            ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
            FROM [Role]
            <include refid="wheresql" />
            )
            SELECT *
            FROM datatable
            WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
        </select>
    </statements>
</sqlMap>