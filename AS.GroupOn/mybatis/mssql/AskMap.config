<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="AskMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Ask" type="AS.GroupOn.Domain.Spi.Ask,AS.GroupOn" />
    <typeAlias alias="AskFilter" type="AS.GroupOn.DataAccess.Filters.AskFilter,AS.GroupOn" />
    <typeAlias alias="AskBat" type="AS.GroupOn.DataAccess.SqlBat.AskBat,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <flushOnExecute statement="updatebat"/>
      <flushOnExecute statement="deletebat"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Ask" >
      insert into [Ask]
      (User_id,Team_id,City_id,Content,Comment,Create_time)
      values
      (#User_id#,#Team_id#,#City_id#,#Content#,#Comment#,#Create_time#)
      <selectKey type="post" resultClass="System.Int32" property="Id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Ask">
      update [Ask] set
      User_id=#User_id#,Team_id=#Team_id#,City_id=#City_id#,Content=#Content#,Comment=#Comment#,Create_time=#Create_time#
      where Id=#Id#
    </update>
    <update id="updatebat" parameterClass="Ask">
      update [Ask]
      <include refid="setsql"/>
      <include refid="wheresql" />
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Ask] where id=#value#
    </delete>
    <delete id="deletebat" parameterClass="AskFilter">
      delete from [Ask]
      <include refid="wheresql" />
    </delete>
    <sql id="selectsql">
      select * from [Ask]
    </sql>
    <sql id="setsql">
      <dynamic prepend="set">
        <isNotNull prepend=" " property="Bat_CityID">
          City_id=#Bat_CityID#
        </isNotNull>
      </dynamic>
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="User_id">
		   ask.[User_id]=#User_id#
		    </isNotNull>
        <isNotNull prepend="and" property="Team_ID">
          Team_id=#Team_ID# and Content is not null
        </isNotNull>
        <isNotNull prepend="and" property="City_ID">
          City_id=#City_ID#
        </isNotNull>
        <isNotNull prepend="and" property="CommentAndMy">
          (Comment is not null or User_ID=#CommentAndMy#)
        </isNotNull>
        <isNotNull property="IsComment">
          <isEqual compareValue="true" prepend="and" property="IsComment">
            Comment is not null
          </isEqual>
          <isEqual compareValue="false" prepend="and" property="IsComment">
            Comment is null
          </isEqual>
        </isNotNull>
		  <isNotNull prepend="and" property="FromCreate_time">
			  <![CDATA[
          Create_time>=#FromCreate_time#
          ]]>
		  </isNotNull>
		  <isNotNull prepend="and" property="ToCreate_time">
			  <![CDATA[
          Create_time<=#ToCreate_time#
          ]]>
		  </isNotNull>
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Ask" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="AskFilter" resultClass="Ask" cacheModel="c">
      select top 1
      * from [Ask]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="AskFilter" resultClass="Ask" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Ask]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="AskFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Ask]
      <include refid="wheresql" />
    </select>
	  <select id="getcounttm" parameterClass="AskFilter" resultClass="System.Int32" cacheModel="c">
		  select count(*) from [Ask] inner JOIN Team ON Ask.Team_id = Team.Id
		  <include refid="wheresql" />
	  </select>
    <select id="getbypage" resultClass="Ask" parameterClass="AskFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Ask]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
	  <select id="getbypagetm" resultClass="Ask" parameterClass="AskFilter" cacheModel="c">
		  WITH datatable AS
		  (
		  SELECT ask.*,
		  ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
		  FROM [Ask] inner JOIN Team ON Ask.Team_id = Team.Id
		  <include refid="wheresql" />
		  )
		  SELECT *
		  FROM datatable
		  WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
	  </select>
	  
  </statements>
</sqlMap>