<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="AdjunctMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Adjunct" type="AS.GroupOn.Domain.Spi.Adjunct,AS.GroupOn" />
    <typeAlias alias="AdjunctFilter" type="AS.GroupOn.DataAccess.Filters.AdjunctFilter,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Adjunct" >
      insert into [Adjunct]
      (url,decription,sort,display,uploadTime)
      values
      (#url#,#decription#,#sort#,#display#,#uploadTime#)
      <selectKey type="post" resultClass="System.Int32" property="id">
        select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Adjunct">
      update [Adjunct] set
      url=#url#,decription=#decription#,sort=#sort#,uploadTime=#uploadTime#,display=#display#
      where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Adjunct] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Adjunct]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Id">
          id=#Id#
        </isNotNull>
        <isNotNull prepend="and" property="Url">
          url=#Url#
        </isNotNull>
        <isNotNull prepend="and" property="display">
          display=#display#
        </isNotNull>
        <isNotNull prepend="and" property="reId">
          <![CDATA[
          id>#reId#
           ]]>
        </isNotNull>
        <isNotNull prepend="and" property="FromUploadTime">
          <![CDATA[
          UploadTime>=#FromUploadTime#
          ]]>
        </isNotNull>
        <isNotNull prepend="and" property="ToUploadTime">
          <![CDATA[
          UploadTime<=#ToUploadTime#
          ]]>
        </isNotNull>

      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Adjunct" cacheModel="c">
      <include refid="selectsql" />
      where id=#value#
    </select>
    <select id="gettop1byfilter" parameterClass="AdjunctFilter" resultClass="Adjunct" cacheModel="c">
      select top 1
      * from [Adjunct]
      <include refid="wheresql"/>
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="AdjunctFilter" resultClass="Adjunct" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Adjunct]
      <include refid="wheresql"/>
    <isNotEmpty property="SortOrderString">
      order by $SortOrderString$
    </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="AdjunctFilter" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Adjunct]
      <include refid="wheresql"/>
    </select>
    <select id="getbypage" resultClass="Adjunct" parameterClass="AdjunctFilter" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Adjunct]
      <include refid="wheresql"/>
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>