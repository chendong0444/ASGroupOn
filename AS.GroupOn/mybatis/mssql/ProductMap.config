<?xml version="1.0" encoding="utf-8" ?>
<!--产品库-->
<sqlMap namespace="ProductMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Product" type="AS.GroupOn.Domain.Spi.Product,AS.GroupOn" />
        <typeAlias alias="ProductFilter" type="AS.GroupOn.DataAccess.Filters.ProductFilter,AS.GroupOn" />
    </alias>
    <cacheModels>
        <cacheModel id="c" implementation="MEMORY" readOnly="true">
            <flushInterval  seconds="3" />
            <flushOnExecute statement="insert"/>
            <flushOnExecute statement="update"/>
            <flushOnExecute statement="delete"/>
            <property name="CacheSize" value="10000" />
        </cacheModel>
    </cacheModels>
    <statements>
        <insert id="insert" parameterClass="Product" >
            insert into [Product]
            (productname,price,inventory,imgurl,detail,sortorder,createtime,status,bulletin,open_invent,partnerid,invent_result,team_price,brand_id,summary,adminid,operatortype,ramark)
            values
            (#productname#,#price#,#inventory#,#imgurl#,#detail#,#sortorder#,getdate(),#status#,#bulletin#,#open_invent#,#partnerid#,#invent_result#,#team_price#,#brand_id#,#summary#,#adminid#,#operatortype#,#ramark#)
            <selectKey type="post" resultClass="System.Int32" property="id">
                select @@identity as value
            </selectKey>
        </insert>
        <update id="update" parameterClass="Product">
            update [Product] set
            productname=#productname#,price=#price#,inventory=#inventory#,imgurl=#imgurl#,detail=#detail#,sortorder=#sortorder#,createtime=#createtime#,status=#status#,bulletin=#bulletin#,open_invent=#open_invent#,partnerid=#partnerid#,invent_result=#invent_result#,team_price=#team_price#,brand_id=#brand_id#,summary=#summary#,adminid=#adminid#,operatortype=#operatortype#,ramark=#ramark#
            where id=#id#
        </update>
        <delete id="delete" parameterClass="System.Int32">
            delete from [Product] where id=#value#
        </delete>
        <sql id="selectsql">
            select * from [Product]
        </sql>
        <sql id="wheresql">
            <dynamic prepend="where">
              <isNotNull prepend="and" property="Id">
                id=#Id#
              </isNotNull>
              <isNotNull prepend="and" property="Productnamelike">
                (productname like '%$Productnamelike$%')
              </isNotNull>
              <isNotNull prepend="and" property="Productname">
                productname=#Productname#
              </isNotNull>
              <isNotNull prepend="and" property="Prnamelike">
				  (productname like '%'+#Prnamelike#+'%' or id like '%'+#Prnamelike#+'%')
			  </isNotNull>
              <isNotNull prepend="and" property="Status">
                status=#Status#
              </isNotNull>
              <isNotNull prepend="and" property="partnerId">
                partnerid=#partnerId#
              </isNotNull>
				<isNotNull prepend="and" property="inpartnerId">
					partnerid in (select id from partner where City_id =#inpartnerId#)
				</isNotNull>
            </dynamic>
        </sql>

      <select id="selmaxid" parameterClass="ProductFilter" resultClass="System.Int32" cacheModel="c">
        select MAX(id)from product
      </select>
  
        <select id="getbyid" parameterClass="System.Int32" resultClass="Product" cacheModel="c">
            <include refid="selectsql" />
            where id=#value#
        </select>
        <select id="gettop1byfilter" parameterClass="ProductFilter" resultClass="Product" cacheModel="c">
            select top 1
            * from [Product]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getbyfilter" parameterClass="ProductFilter" resultClass="Product" cacheModel="c">
            select
            <isNotNull property="Top">
                top $Top$
            </isNotNull>
            * from [Product]
            <include refid="wheresql" />
            <isNotEmpty property="SortOrderString">
                order by $SortOrderString$
            </isNotEmpty>
        </select>
        <select id="getcount" parameterClass="ProductFilter" resultClass="System.Int32" cacheModel="c">
            select count(*) from [Product]
            <include refid="wheresql" />
        </select>
        <select id="getbypage" resultClass="Product" parameterClass="ProductFilter" cacheModel="c">
            WITH datatable AS
            (
            SELECT *,
            ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
            FROM [Product]
            <include refid="wheresql" />
            )
            SELECT *
            FROM datatable
            WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
        </select>
    </statements>
</sqlMap>