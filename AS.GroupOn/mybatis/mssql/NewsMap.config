<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="NewsMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="News" type="AS.GroupOn.Domain.Spi.News,AS.GroupOn" />
		<typeAlias alias="NewsFilter" type="AS.GroupOn.DataAccess.Filters.NewsFilter,AS.GroupOn" />
	</alias>
	<cacheModels>
		<cacheModel id="c" implementation="MEMORY" readOnly="true">
			<flushInterval  seconds="3" />
			<flushOnExecute statement="insert"/>
			<flushOnExecute statement="update"/>
			<flushOnExecute statement="delete"/>
			<property name="CacheSize" value="10000" />
		</cacheModel>
	</cacheModels>
	<statements>
		<insert id="insert" parameterClass="News" >
            INSERT INTO [news]
            (title,content,create_time,type,link,adminid,seotitle,seokeyword,seodescription)
            values
            (#title#,#content#,#create_time#,#type#,#link#,#adminid#,#seotitle#,#seokeyword#,#seodescription#)
            <selectKey type="post" resultClass="System.Int32" property="id">
				select @@identity as value
			</selectKey>
		</insert>
		<update id="update" parameterClass="News">
            update [news] set title=#title#,content=#content#,create_time=#create_time#,type=#type#,link=#link#,adminid=#adminid#,seotitle=#seotitle#,seokeyword=#seokeyword#,seodescription=#seodescription#
            where id=#id#
        </update>
		<delete id="delete" parameterClass="System.Int32">
			delete from [news] where id=#id#
		</delete>
		<sql id="selectsql">
			select * from [news]
		</sql>
		<sql id="wheresql">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="id">
					id=#id#
				</isNotNull>
                <isNotNull prepend="and" property="type">
                    type=#type#
                </isNotNull>
				<isNotNull prepend="and" property="FromCreate_time">
					<![CDATA[
					create_time>=#FromCreate_time#
					 ]]>
				</isNotNull>
				<isNotNull prepend="and" property="ToCreate_time">
					<![CDATA[
					 create_time<=#ToCreate_time#
					 ]]>
				</isNotNull>
			</dynamic>
		</sql>
		<select id="getbyid" parameterClass="System.Int32" resultClass="News" cacheModel="c">
			<include refid="selectsql" />
			where id=#id#
		</select>
		<select id="gettop1byfilter" parameterClass="NewsFilter" resultClass="News" cacheModel="c">
			select top 1
			* from [news]
			<include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getbyfilter" parameterClass="NewsFilter" resultClass="News" cacheModel="c">
			select
			<isNotNull property="Top">
				top $Top$
			</isNotNull>
			* from [news]
			<include refid="wheresql" />
			<isNotEmpty property="SortOrderString">
				order by $SortOrderString$
			</isNotEmpty>
		</select>
		<select id="getcount" parameterClass="NewsFilter" resultClass="System.Int32" cacheModel="c">
			select count(*) from [news]
			<include refid="wheresql" />
		</select>
		<select id="getbypage" resultClass="News" parameterClass="NewsFilter" cacheModel="c">
			WITH datatable AS
			(
			SELECT *,
			ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
			FROM [news]
			<include refid="wheresql" />
			)
			SELECT *
			FROM datatable
			WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
		</select>
	</statements>
</sqlMap>