<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Vote_OptionsMap" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Vote_Options" type="AS.GroupOn.Domain.Spi.Vote_Options,AS.GroupOn" />
    <typeAlias alias="Vote_OptionsFilters" type="AS.GroupOn.DataAccess.Filters.Vote_OptionsFilters,AS.GroupOn" />
  </alias>
  <cacheModels>
    <cacheModel id="c" implementation="MEMORY" readOnly="true">
      <flushInterval  seconds="3" />
      <flushOnExecute statement="insert"/>
      <flushOnExecute statement="update"/>
      <flushOnExecute statement="delete"/>
      <property name="CacheSize" value="10000" />
    </cacheModel>
  </cacheModels>
  <statements>
    <insert id="insert" parameterClass="Vote_Options" >
      insert into [Vote_Options]
      (question_id,[name],is_br,is_input,is_show,[order])
      values
      (#question_id#,#name#,#is_br#,#is_input#,#is_show#,#order#)
      <selectKey type="post" resultClass="System.Int32" property="id">
          select @@identity as value
      </selectKey>
    </insert>
    <update id="update" parameterClass="Vote_Options">
      update [Vote_Options] set
	  question_id=#question_id#,[name]=#name#,is_br=#is_br#,is_input=#is_input#,is_show=#is_show#,[order]=#order#
      where id=#id#
    </update>
    <delete id="delete" parameterClass="System.Int32">
      delete from [Vote_Options] where id=#value#
    </delete>
    <sql id="selectsql">
      select * from [Vote_Options]
    </sql>
    <sql id="wheresql">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="Question_ID">
          question_id=#Question_ID#
        </isNotNull>
		<isNotNull prepend="and" property="Name">
      [name]=#Name#
    </isNotNull>

        <isNotNull prepend="and" property="is_show">
          is_show=#is_show#
        </isNotNull>
        
      </dynamic>
    </sql>
    <select id="getbyid" parameterClass="System.Int32" resultClass="Vote_Options" cacheModel="c">
      <include refid="selectsql" />
      where id=#id#
    </select>
    <select id="gettop1byfilter" parameterClass="Vote_OptionsFilters" resultClass="Vote_Options" cacheModel="c">
      select top 1
      * from [Vote_Options]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getbyfilter" parameterClass="Vote_OptionsFilters" resultClass="Vote_Options" cacheModel="c">
      select
      <isNotNull property="Top">
        top $Top$
      </isNotNull>
      * from [Vote_Options]
      <include refid="wheresql" />
      <isNotEmpty property="SortOrderString">
        order by $SortOrderString$
      </isNotEmpty>
    </select>
    <select id="getcount" parameterClass="Vote_OptionsFilters" resultClass="System.Int32" cacheModel="c">
      select count(*) from [Vote_Options]
      <include refid="wheresql" />
    </select>
    <select id="getbypage" resultClass="Vote_Options" parameterClass="Vote_OptionsFilters" cacheModel="c">
      WITH datatable AS
      (
      SELECT *,
      ROW_NUMBER() OVER (ORDER BY $SortOrderString$) AS 'RowNumber'
      FROM [Vote_Options]
      <include refid="wheresql" />
      )
      SELECT *
      FROM datatable
      WHERE RowNumber BETWEEN #StartRow# AND #EndRow#;
    </select>
  </statements>
</sqlMap>