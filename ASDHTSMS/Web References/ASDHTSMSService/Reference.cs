//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace ASDHTSMS.ASDHTSMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="parametersOperateSoap", Namespace="http://sms.asdht.com/")]
    public partial class parametersOperate : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SelectCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendlogSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendlogSelectByWhereOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSMSUserOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public parametersOperate() {
            this.Url = global::ASDHTSMS.Properties.Settings.Default.ASDHTSMS_ASDHTSMSService_parametersOperate;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SelectCreditCompletedEventHandler SelectCreditCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendlogSelectCompletedEventHandler SendlogSelectCompleted;
        
        /// <remarks/>
        public event SendlogSelectByWhereCompletedEventHandler SendlogSelectByWhereCompleted;
        
        /// <remarks/>
        public event GetHtmlCompletedEventHandler GetHtmlCompleted;
        
        /// <remarks/>
        public event ASSMSUserCompletedEventHandler ASSMSUserCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/SelectCredit", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCredit(string username, string password) {
            object[] results = this.Invoke("SelectCredit", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCreditAsync(string username, string password) {
            this.SelectCreditAsync(username, password, null);
        }
        
        /// <remarks/>
        public void SelectCreditAsync(string username, string password, object userState) {
            if ((this.SelectCreditOperationCompleted == null)) {
                this.SelectCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCreditOperationCompleted);
            }
            this.InvokeAsync("SelectCredit", new object[] {
                        username,
                        password}, this.SelectCreditOperationCompleted, userState);
        }
        
        private void OnSelectCreditOperationCompleted(object arg) {
            if ((this.SelectCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCreditCompleted(this, new SelectCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/SendSMS", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSMS(string username, string password, string context, string receivephone) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        username,
                        password,
                        context,
                        receivephone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string username, string password, string context, string receivephone) {
            this.SendSMSAsync(username, password, context, receivephone, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string username, string password, string context, string receivephone, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        username,
                        password,
                        context,
                        receivephone}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/SendlogSelect", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendlogSelect(string username, string pwd, int iPageSize, int iPageIndex) {
            object[] results = this.Invoke("SendlogSelect", new object[] {
                        username,
                        pwd,
                        iPageSize,
                        iPageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendlogSelectAsync(string username, string pwd, int iPageSize, int iPageIndex) {
            this.SendlogSelectAsync(username, pwd, iPageSize, iPageIndex, null);
        }
        
        /// <remarks/>
        public void SendlogSelectAsync(string username, string pwd, int iPageSize, int iPageIndex, object userState) {
            if ((this.SendlogSelectOperationCompleted == null)) {
                this.SendlogSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendlogSelectOperationCompleted);
            }
            this.InvokeAsync("SendlogSelect", new object[] {
                        username,
                        pwd,
                        iPageSize,
                        iPageIndex}, this.SendlogSelectOperationCompleted, userState);
        }
        
        private void OnSendlogSelectOperationCompleted(object arg) {
            if ((this.SendlogSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendlogSelectCompleted(this, new SendlogSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/SendlogSelectByWhere", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendlogSelectByWhere(string username, string pwd, int iPageSize, int iPageIndex, string mobile, string begintime, string endtime) {
            object[] results = this.Invoke("SendlogSelectByWhere", new object[] {
                        username,
                        pwd,
                        iPageSize,
                        iPageIndex,
                        mobile,
                        begintime,
                        endtime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendlogSelectByWhereAsync(string username, string pwd, int iPageSize, int iPageIndex, string mobile, string begintime, string endtime) {
            this.SendlogSelectByWhereAsync(username, pwd, iPageSize, iPageIndex, mobile, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void SendlogSelectByWhereAsync(string username, string pwd, int iPageSize, int iPageIndex, string mobile, string begintime, string endtime, object userState) {
            if ((this.SendlogSelectByWhereOperationCompleted == null)) {
                this.SendlogSelectByWhereOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendlogSelectByWhereOperationCompleted);
            }
            this.InvokeAsync("SendlogSelectByWhere", new object[] {
                        username,
                        pwd,
                        iPageSize,
                        iPageIndex,
                        mobile,
                        begintime,
                        endtime}, this.SendlogSelectByWhereOperationCompleted, userState);
        }
        
        private void OnSendlogSelectByWhereOperationCompleted(object arg) {
            if ((this.SendlogSelectByWhereCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendlogSelectByWhereCompleted(this, new SendlogSelectByWhereCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/GetHtml", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHtml(string username, string password) {
            object[] results = this.Invoke("GetHtml", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHtmlAsync(string username, string password) {
            this.GetHtmlAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetHtmlAsync(string username, string password, object userState) {
            if ((this.GetHtmlOperationCompleted == null)) {
                this.GetHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHtmlOperationCompleted);
            }
            this.InvokeAsync("GetHtml", new object[] {
                        username,
                        password}, this.GetHtmlOperationCompleted, userState);
        }
        
        private void OnGetHtmlOperationCompleted(object arg) {
            if ((this.GetHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHtmlCompleted(this, new GetHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.asdht.com/ASSMSUser", RequestNamespace="http://sms.asdht.com/", ResponseNamespace="http://sms.asdht.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ASSMSUser(string username, string password) {
            object[] results = this.Invoke("ASSMSUser", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ASSMSUserAsync(string username, string password) {
            this.ASSMSUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ASSMSUserAsync(string username, string password, object userState) {
            if ((this.ASSMSUserOperationCompleted == null)) {
                this.ASSMSUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSMSUserOperationCompleted);
            }
            this.InvokeAsync("ASSMSUser", new object[] {
                        username,
                        password}, this.ASSMSUserOperationCompleted, userState);
        }
        
        private void OnASSMSUserOperationCompleted(object arg) {
            if ((this.ASSMSUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSMSUserCompleted(this, new ASSMSUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectCreditCompletedEventHandler(object sender, SelectCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendlogSelectCompletedEventHandler(object sender, SendlogSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendlogSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendlogSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendlogSelectByWhereCompletedEventHandler(object sender, SendlogSelectByWhereCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendlogSelectByWhereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendlogSelectByWhereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHtmlCompletedEventHandler(object sender, GetHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ASSMSUserCompletedEventHandler(object sender, ASSMSUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSMSUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSMSUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591