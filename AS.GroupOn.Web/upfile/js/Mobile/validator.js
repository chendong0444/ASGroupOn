(function (b) { function a(c, e) { var d = this; d.form = b(c); if (d.form.is("form")) { d.callback = e || function (f) { alert(f) }; d.form.submit(function () { return d.doSubmit() }).on("keyup", "input[data-cls], input[data-nocls]", function () { var h = b(this), i = h.data("partner"), g = h.data("cls"), j = h.data("nocls"), f = !h.val() || d._hasError(h); if (i) { h = b(i) } if ((f && g) || (!f && j)) { h.removeClass(g || j) } else { h.addClass(g || j) } }) } } b.extend(a.prototype, { doSubmit: function () { var d = this.form.find("input"), e, c = d.length, f = 0; for (; f < c; ++f) { e = d[f]; if (a.textType.indexOf(e.type + ",") !== -1) { if (this._hasError(e)) { e.focus(); this.callback(e.title || this.msg || "输入错误", e); return false } } } return true }, _hasError: function (d) { var d = b(d), f = d.val(), c = d.attr("type"), e = d.prop("required") && !d.prop("disabled"); if (e && !f) { this.msg = "输入不能为空"; return true } if (e || f) { if (d.attr("pattern")) { if (!new RegExp("^" + d.attr("pattern") + "$").test(f)) { this.msg = "输入格式不正确"; return true } } else { if (a.type[c]) { if (!a.type[c].test(f)) { this.msg = "输入的类型不正确"; return true } } } } return false } }); a.type = { email: /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/, number: /^\d+$/, date: /^\d{4}-\d{2}-\d{2}$/, tel: /^(?:1\d{12}|\d{4}-?\d{7,8}(?:-\d{3,5})?)$/, url: /^[a-zA-z]+:\/\/[^\s]*$/ }; a.textType = "text,search,email,number,date,tel,"; b.fn.validator = function (c) { new a(this, c); return this } })(Zepto);